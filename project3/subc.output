Terminals unused in grammar

   '|'
   '/'
   '%'


State 24 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt
    9        | PRINT

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 $@1: %empty

   14 @2: %empty

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'

   19 @3: %empty

   20 func_decl: type_specifier pointers ID '(' @3 param_list ')'

   21 pointers: '*'
   22         | %empty

   23 param_list: param_decl
   24           | param_list ',' param_decl

   25 param_decl: type_specifier pointers ID
   26           | type_specifier pointers ID '[' const_expr ']'

   27 def_list: def_list def
   28         | %empty

   29 def: type_specifier pointers ID ';'
   30    | type_specifier pointers ID '[' const_expr ']' ';'
   31    | type_specifier ';'
   32    | func_decl ';'
   33    | PRINT

   34 $@4: %empty

   35 compound_stmt: '{' $@4 local_defs stmt_list '}'

   36 local_defs: def_list

   37 stmt_list: stmt_list stmt
   38          | %empty

   39 stmt: expr ';'
   40     | compound_stmt
   41     | RETURN ';'
   42     | RETURN expr ';'
   43     | ';'
   44     | IF '(' expr ')' stmt
   45     | IF '(' expr ')' stmt ELSE stmt
   46     | WHILE '(' expr ')' stmt
   47     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   48     | BREAK ';'
   49     | CONTINUE ';'
   50     | PRINT

   51 expr_e: expr
   52       | %empty

   53 const_expr: expr

   54 expr: unary '=' expr
   55     | or_expr

   56 or_expr: or_list

   57 or_list: or_list LOGICAL_OR and_expr
   58        | and_expr

   59 and_expr: and_list

   60 and_list: and_list LOGICAL_AND binary
   61         | binary

   62 binary: binary RELOP binary
   63       | binary EQUOP binary
   64       | binary '+' binary
   65       | binary '-' binary
   66       | unary

   67 unary: '(' expr ')'
   68      | '(' unary ')'
   69      | INTEGER_CONST
   70      | CHAR_CONST
   71      | STRING
   72      | ID
   73      | '-' unary
   74      | '!' unary
   75      | unary INCOP
   76      | unary DECOP
   77      | INCOP unary
   78      | DECOP unary
   79      | '&' unary
   80      | '*' unary
   81      | unary '[' expr ']'
   82      | unary '.' ID
   83      | unary STRUCTOP ID
   84      | unary '(' args ')'
   85      | unary '(' ')'

   86 args: expr
   87     | expr ',' args


Terminals, with rules where they appear

$end (0) 0
'!' (33) 74
'%' (37)
'&' (38) 79
'(' (40) 17 18 20 44 45 46 47 67 68 84 85
')' (41) 17 18 20 44 45 46 47 67 68 84 85
'*' (42) 21 80
'+' (43) 64
',' (44) 24 87
'-' (45) 65 73
'.' (46) 82
'/' (47)
';' (59) 4 5 6 7 29 30 31 32 39 41 42 43 47 48 49
'=' (61) 54
'[' (91) 5 26 30 81
']' (93) 5 26 30 81
'{' (123) 15 35
'|' (124)
'}' (125) 15 35
error (256)
LOGICAL_OR (258) 57
LOGICAL_AND (259) 60
EQUOP (260) 63
RELOP (261) 62
INCOP (262) 75 77
DECOP (263) 76 78
STRUCTOP (264) 83
TYPE (265) 10
VOID (266) 11 18
STRUCT (267) 15 16
RETURN (268) 41 42
IF (269) 44 45
ELSE (270) 45
WHILE (271) 46
FOR (272) 47
BREAK (273) 48
CONTINUE (274) 49
ID (275) 4 5 15 16 17 18 20 25 26 29 30 72 82 83
PRINT (276) 9 33 50
CHAR_CONST (277) 70
STRING (278) 71
INTEGER_CONST (279) 69


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
ext_def_list (45)
    on left: 2 3, on right: 1 2
ext_def (46)
    on left: 4 5 6 7 8 9, on right: 2
type_specifier (47)
    on left: 10 11 12, on right: 4 5 7 17 18 20 25 26 29 30 31
struct_specifier (48)
    on left: 15 16, on right: 12
$@1 (49)
    on left: 13, on right: 15
@2 (50)
    on left: 14, on right: 15
func_decl (51)
    on left: 17 18 20, on right: 6 8 32
@3 (52)
    on left: 19, on right: 20
pointers (53)
    on left: 21 22, on right: 4 5 17 18 20 25 26 29 30
param_list (54)
    on left: 23 24, on right: 20 24
param_decl (55)
    on left: 25 26, on right: 23 24
def_list (56)
    on left: 27 28, on right: 15 27 36
def (57)
    on left: 29 30 31 32 33, on right: 27
compound_stmt (58)
    on left: 35, on right: 8 40
$@4 (59)
    on left: 34, on right: 35
local_defs (60)
    on left: 36, on right: 35
stmt_list (61)
    on left: 37 38, on right: 35 37
stmt (62)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50, on right: 37 44 45
    46 47
expr_e (63)
    on left: 51 52, on right: 47
const_expr (64)
    on left: 53, on right: 5 26 30
expr (65)
    on left: 54 55, on right: 39 42 44 45 46 51 53 54 67 81 86 87
or_expr (66)
    on left: 56, on right: 55
or_list (67)
    on left: 57 58, on right: 56 57
and_expr (68)
    on left: 59, on right: 57 58
and_list (69)
    on left: 60 61, on right: 59 60
binary (70)
    on left: 62 63 64 65 66, on right: 60 61 62 63 64 65
unary (71)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85, on right: 54 66 68 73 74 75 76 77 78 79 80 81 82 83 84 85
args (72)
    on left: 86 87, on right: 84 87


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 7

    $default  reduce using rule 1 (program)

    ext_def           go to state 8
    type_specifier    go to state 9
    struct_specifier  go to state 10
    func_decl         go to state 11


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   15 struct_specifier: STRUCT . ID '{' $@1 def_list @2 '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 12


State 7

    9 ext_def: PRINT .

    $default  reduce using rule 9 (ext_def)


State 8

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 9

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   20          | type_specifier . pointers ID '(' @3 param_list ')'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 14

    $default  reduce using rule 22 (pointers)

    pointers  go to state 15


State 10

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 11

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 16
    '{'  shift, and go to state 17

    compound_stmt  go to state 18


State 12

   15 struct_specifier: STRUCT ID . '{' $@1 def_list @2 '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 19

    $default  reduce using rule 16 (struct_specifier)


State 13

   21 pointers: '*' .

    $default  reduce using rule 21 (pointers)


State 14

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 15

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   20          | type_specifier pointers . ID '(' @3 param_list ')'

    ID  shift, and go to state 20


State 16

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 17

   35 compound_stmt: '{' . $@4 local_defs stmt_list '}'

    $default  reduce using rule 34 ($@4)

    $@4  go to state 21


State 18

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 19

   15 struct_specifier: STRUCT ID '{' . $@1 def_list @2 '}'

    $default  reduce using rule 13 ($@1)

    $@1  go to state 22


State 20

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   20          | type_specifier pointers ID . '(' @3 param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 21

   35 compound_stmt: '{' $@4 . local_defs stmt_list '}'

    $default  reduce using rule 28 (def_list)

    def_list    go to state 26
    local_defs  go to state 27


State 22

   15 struct_specifier: STRUCT ID '{' $@1 . def_list @2 '}'

    $default  reduce using rule 28 (def_list)

    def_list  go to state 28


State 23

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    const_expr  go to state 40
    expr        go to state 41
    or_expr     go to state 42
    or_list     go to state 43
    and_expr    go to state 44
    and_list    go to state 45
    binary      go to state 46
    unary       go to state 47


State 24

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   20          | type_specifier pointers ID '(' . @3 param_list ')'

    ')'   shift, and go to state 48
    VOID  shift, and go to state 49

    VOID      [reduce using rule 19 (@3)]
    $default  reduce using rule 19 (@3)

    @3  go to state 50


State 25

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 26

   27 def_list: def_list . def
   36 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 51

    PRINT     [reduce using rule 36 (local_defs)]
    $default  reduce using rule 36 (local_defs)

    type_specifier    go to state 52
    struct_specifier  go to state 10
    func_decl         go to state 53
    def               go to state 54


State 27

   35 compound_stmt: '{' $@4 local_defs . stmt_list '}'

    $default  reduce using rule 38 (stmt_list)

    stmt_list  go to state 55


State 28

   15 struct_specifier: STRUCT ID '{' $@1 def_list . @2 '}'
   27 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 51

    $default  reduce using rule 14 (@2)

    type_specifier    go to state 52
    struct_specifier  go to state 10
    @2                go to state 56
    func_decl         go to state 53
    def               go to state 54


State 29

   79 unary: '&' . unary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    unary  go to state 57


State 30

   73 unary: '-' . unary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    unary  go to state 58


State 31

   80 unary: '*' . unary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    unary  go to state 59


State 32

   74 unary: '!' . unary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    unary  go to state 60


State 33

   77 unary: INCOP . unary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    unary  go to state 61


State 34

   78 unary: DECOP . unary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    unary  go to state 62


State 35

   67 unary: '(' . expr ')'
   68      | '(' . unary ')'

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    expr      go to state 63
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 64


State 36

   72 unary: ID .

    $default  reduce using rule 72 (unary)


State 37

   70 unary: CHAR_CONST .

    $default  reduce using rule 70 (unary)


State 38

   71 unary: STRING .

    $default  reduce using rule 71 (unary)


State 39

   69 unary: INTEGER_CONST .

    $default  reduce using rule 69 (unary)


State 40

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 65


State 41

   53 const_expr: expr .

    $default  reduce using rule 53 (const_expr)


State 42

   55 expr: or_expr .

    $default  reduce using rule 55 (expr)


State 43

   56 or_expr: or_list .
   57 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 66

    $default  reduce using rule 56 (or_expr)


State 44

   58 or_list: and_expr .

    $default  reduce using rule 58 (or_list)


State 45

   59 and_expr: and_list .
   60 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 67

    $default  reduce using rule 59 (and_expr)


State 46

   61 and_list: binary .
   62 binary: binary . RELOP binary
   63       | binary . EQUOP binary
   64       | binary . '+' binary
   65       | binary . '-' binary

    EQUOP  shift, and go to state 68
    RELOP  shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71

    $default  reduce using rule 61 (and_list)


State 47

   54 expr: unary . '=' expr
   66 binary: unary .
   75 unary: unary . INCOP
   76      | unary . DECOP
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    '='       shift, and go to state 72
    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 66 (binary)


State 48

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 49

   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 79


State 50

   20 func_decl: type_specifier pointers ID '(' @3 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 80
    struct_specifier  go to state 10
    param_list        go to state 81
    param_decl        go to state 82


State 51

   33 def: PRINT .

    $default  reduce using rule 33 (def)


State 52

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   20          | type_specifier . pointers ID '(' @3 param_list ')'
   29 def: type_specifier . pointers ID ';'
   30    | type_specifier . pointers ID '[' const_expr ']' ';'
   31    | type_specifier . ';'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 83

    $default  reduce using rule 22 (pointers)

    pointers  go to state 84


State 53

   32 def: func_decl . ';'

    ';'  shift, and go to state 85


State 54

   27 def_list: def_list def .

    $default  reduce using rule 27 (def_list)


State 55

   35 compound_stmt: '{' $@4 local_defs stmt_list . '}'
   37 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    ID             shift, and go to state 36
    PRINT          shift, and go to state 92
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39
    ';'            shift, and go to state 93
    '{'            shift, and go to state 17
    '}'            shift, and go to state 94

    compound_stmt  go to state 95
    stmt           go to state 96
    expr           go to state 97
    or_expr        go to state 42
    or_list        go to state 43
    and_expr       go to state 44
    and_list       go to state 45
    binary         go to state 46
    unary          go to state 47


State 56

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 . '}'

    '}'  shift, and go to state 98


State 57

   75 unary: unary . INCOP
   76      | unary . DECOP
   79      | '&' unary .
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 79 (unary)


State 58

   73 unary: '-' unary .
   75      | unary . INCOP
   76      | unary . DECOP
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 73 (unary)


State 59

   75 unary: unary . INCOP
   76      | unary . DECOP
   80      | '*' unary .
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 80 (unary)


State 60

   74 unary: '!' unary .
   75      | unary . INCOP
   76      | unary . DECOP
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 74 (unary)


State 61

   75 unary: unary . INCOP
   76      | unary . DECOP
   77      | INCOP unary .
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 77 (unary)


State 62

   75 unary: unary . INCOP
   76      | unary . DECOP
   78      | DECOP unary .
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 78 (unary)


State 63

   67 unary: '(' expr . ')'

    ')'  shift, and go to state 99


State 64

   54 expr: unary . '=' expr
   66 binary: unary .
   68 unary: '(' unary . ')'
   75      | unary . INCOP
   76      | unary . DECOP
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    '='       shift, and go to state 72
    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    ')'       shift, and go to state 100
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 66 (binary)


State 65

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 101


State 66

   57 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    and_expr  go to state 102
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 103


State 67

   60 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    binary  go to state 104
    unary   go to state 103


State 68

   63 binary: binary EQUOP . binary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    binary  go to state 105
    unary   go to state 103


State 69

   62 binary: binary RELOP . binary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    binary  go to state 106
    unary   go to state 103


State 70

   64 binary: binary '+' . binary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    binary  go to state 107
    unary   go to state 103


State 71

   65 binary: binary '-' . binary

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    binary  go to state 108
    unary   go to state 103


State 72

   54 expr: unary '=' . expr

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    expr      go to state 109
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 73

   75 unary: unary INCOP .

    $default  reduce using rule 75 (unary)


State 74

   76 unary: unary DECOP .

    $default  reduce using rule 76 (unary)


State 75

   81 unary: unary '[' . expr ']'

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    expr      go to state 110
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 76

   84 unary: unary '(' . args ')'
   85      | unary '(' . ')'

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ')'            shift, and go to state 111
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    expr      go to state 112
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47
    args      go to state 113


State 77

   82 unary: unary '.' . ID

    ID  shift, and go to state 114


State 78

   83 unary: unary STRUCTOP . ID

    ID  shift, and go to state 115


State 79

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 80

   25 param_decl: type_specifier . pointers ID
   26           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 13

    $default  reduce using rule 22 (pointers)

    pointers  go to state 116


State 81

   20 func_decl: type_specifier pointers ID '(' @3 param_list . ')'
   24 param_list: param_list . ',' param_decl

    ','  shift, and go to state 117
    ')'  shift, and go to state 118


State 82

   23 param_list: param_decl .

    $default  reduce using rule 23 (param_list)


State 83

   31 def: type_specifier ';' .

    $default  reduce using rule 31 (def)


State 84

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   20          | type_specifier pointers . ID '(' @3 param_list ')'
   29 def: type_specifier pointers . ID ';'
   30    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 119


State 85

   32 def: func_decl ';' .

    $default  reduce using rule 32 (def)


State 86

   41 stmt: RETURN . ';'
   42     | RETURN . expr ';'

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39
    ';'            shift, and go to state 120

    expr      go to state 121
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 87

   44 stmt: IF . '(' expr ')' stmt
   45     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 122


State 88

   46 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 123


State 89

   47 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 124


State 90

   48 stmt: BREAK . ';'

    ';'  shift, and go to state 125


State 91

   49 stmt: CONTINUE . ';'

    ';'  shift, and go to state 126


State 92

   50 stmt: PRINT .

    $default  reduce using rule 50 (stmt)


State 93

   43 stmt: ';' .

    $default  reduce using rule 43 (stmt)


State 94

   35 compound_stmt: '{' $@4 local_defs stmt_list '}' .

    $default  reduce using rule 35 (compound_stmt)


State 95

   40 stmt: compound_stmt .

    $default  reduce using rule 40 (stmt)


State 96

   37 stmt_list: stmt_list stmt .

    $default  reduce using rule 37 (stmt_list)


State 97

   39 stmt: expr . ';'

    ';'  shift, and go to state 127


State 98

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}' .

    $default  reduce using rule 15 (struct_specifier)


State 99

   67 unary: '(' expr ')' .

    $default  reduce using rule 67 (unary)


State 100

   68 unary: '(' unary ')' .

    $default  reduce using rule 68 (unary)


State 101

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 102

   57 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 57 (or_list)


State 103

   66 binary: unary .
   75 unary: unary . INCOP
   76      | unary . DECOP
   81      | unary . '[' expr ']'
   82      | unary . '.' ID
   83      | unary . STRUCTOP ID
   84      | unary . '(' args ')'
   85      | unary . '(' ')'

    INCOP     shift, and go to state 73
    DECOP     shift, and go to state 74
    '['       shift, and go to state 75
    '('       shift, and go to state 76
    '.'       shift, and go to state 77
    STRUCTOP  shift, and go to state 78

    $default  reduce using rule 66 (binary)


State 104

   60 and_list: and_list LOGICAL_AND binary .
   62 binary: binary . RELOP binary
   63       | binary . EQUOP binary
   64       | binary . '+' binary
   65       | binary . '-' binary

    EQUOP  shift, and go to state 68
    RELOP  shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71

    $default  reduce using rule 60 (and_list)


State 105

   62 binary: binary . RELOP binary
   63       | binary . EQUOP binary
   63       | binary EQUOP binary .
   64       | binary . '+' binary
   65       | binary . '-' binary

    RELOP  shift, and go to state 69
    '+'    shift, and go to state 70
    '-'    shift, and go to state 71

    $default  reduce using rule 63 (binary)


State 106

   62 binary: binary . RELOP binary
   62       | binary RELOP binary .
   63       | binary . EQUOP binary
   64       | binary . '+' binary
   65       | binary . '-' binary

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 62 (binary)


State 107

   62 binary: binary . RELOP binary
   63       | binary . EQUOP binary
   64       | binary . '+' binary
   64       | binary '+' binary .
   65       | binary . '-' binary

    $default  reduce using rule 64 (binary)


State 108

   62 binary: binary . RELOP binary
   63       | binary . EQUOP binary
   64       | binary . '+' binary
   65       | binary . '-' binary
   65       | binary '-' binary .

    $default  reduce using rule 65 (binary)


State 109

   54 expr: unary '=' expr .

    $default  reduce using rule 54 (expr)


State 110

   81 unary: unary '[' expr . ']'

    ']'  shift, and go to state 128


State 111

   85 unary: unary '(' ')' .

    $default  reduce using rule 85 (unary)


State 112

   86 args: expr .
   87     | expr . ',' args

    ','  shift, and go to state 129

    $default  reduce using rule 86 (args)


State 113

   84 unary: unary '(' args . ')'

    ')'  shift, and go to state 130


State 114

   82 unary: unary '.' ID .

    $default  reduce using rule 82 (unary)


State 115

   83 unary: unary STRUCTOP ID .

    $default  reduce using rule 83 (unary)


State 116

   25 param_decl: type_specifier pointers . ID
   26           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 131


State 117

   24 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 80
    struct_specifier  go to state 10
    param_decl        go to state 132


State 118

   20 func_decl: type_specifier pointers ID '(' @3 param_list ')' .

    $default  reduce using rule 20 (func_decl)


State 119

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   20          | type_specifier pointers ID . '(' @3 param_list ')'
   29 def: type_specifier pointers ID . ';'
   30    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 133
    '('  shift, and go to state 24
    ';'  shift, and go to state 134


State 120

   41 stmt: RETURN ';' .

    $default  reduce using rule 41 (stmt)


State 121

   42 stmt: RETURN expr . ';'

    ';'  shift, and go to state 135


State 122

   44 stmt: IF '(' . expr ')' stmt
   45     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    expr      go to state 136
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 123

   46 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    expr      go to state 137
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 124

   47 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 138
    expr      go to state 139
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 125

   48 stmt: BREAK ';' .

    $default  reduce using rule 48 (stmt)


State 126

   49 stmt: CONTINUE ';' .

    $default  reduce using rule 49 (stmt)


State 127

   39 stmt: expr ';' .

    $default  reduce using rule 39 (stmt)


State 128

   81 unary: unary '[' expr ']' .

    $default  reduce using rule 81 (unary)


State 129

   87 args: expr ',' . args

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    expr      go to state 112
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47
    args      go to state 140


State 130

   84 unary: unary '(' args ')' .

    $default  reduce using rule 84 (unary)


State 131

   25 param_decl: type_specifier pointers ID .
   26           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 141

    $default  reduce using rule 25 (param_decl)


State 132

   24 param_list: param_list ',' param_decl .

    $default  reduce using rule 24 (param_list)


State 133

   30 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    const_expr  go to state 142
    expr        go to state 41
    or_expr     go to state 42
    or_list     go to state 43
    and_expr    go to state 44
    and_list    go to state 45
    binary      go to state 46
    unary       go to state 47


State 134

   29 def: type_specifier pointers ID ';' .

    $default  reduce using rule 29 (def)


State 135

   42 stmt: RETURN expr ';' .

    $default  reduce using rule 42 (stmt)


State 136

   44 stmt: IF '(' expr . ')' stmt
   45     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 143


State 137

   46 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 144


State 138

   47 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 145


State 139

   51 expr_e: expr .

    $default  reduce using rule 51 (expr_e)


State 140

   87 args: expr ',' args .

    $default  reduce using rule 87 (args)


State 141

   26 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    const_expr  go to state 146
    expr        go to state 41
    or_expr     go to state 42
    or_list     go to state 43
    and_expr    go to state 44
    and_list    go to state 45
    binary      go to state 46
    unary       go to state 47


State 142

   30 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 147


State 143

   44 stmt: IF '(' expr ')' . stmt
   45     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    ID             shift, and go to state 36
    PRINT          shift, and go to state 92
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39
    ';'            shift, and go to state 93
    '{'            shift, and go to state 17

    compound_stmt  go to state 95
    stmt           go to state 148
    expr           go to state 97
    or_expr        go to state 42
    or_list        go to state 43
    and_expr       go to state 44
    and_list       go to state 45
    binary         go to state 46
    unary          go to state 47


State 144

   46 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    ID             shift, and go to state 36
    PRINT          shift, and go to state 92
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39
    ';'            shift, and go to state 93
    '{'            shift, and go to state 17

    compound_stmt  go to state 95
    stmt           go to state 149
    expr           go to state 97
    or_expr        go to state 42
    or_list        go to state 43
    and_expr       go to state 44
    and_list       go to state 45
    binary         go to state 46
    unary          go to state 47


State 145

   47 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 150
    expr      go to state 139
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 146

   26 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 151


State 147

   30 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 152


State 148

   44 stmt: IF '(' expr ')' stmt .
   45     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 153

    ELSE      [reduce using rule 44 (stmt)]
    $default  reduce using rule 44 (stmt)


State 149

   46 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 46 (stmt)


State 150

   47 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 154


State 151

   26 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 26 (param_decl)


State 152

   30 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 30 (def)


State 153

   45 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    ID             shift, and go to state 36
    PRINT          shift, and go to state 92
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39
    ';'            shift, and go to state 93
    '{'            shift, and go to state 17

    compound_stmt  go to state 95
    stmt           go to state 155
    expr           go to state 97
    or_expr        go to state 42
    or_list        go to state 43
    and_expr       go to state 44
    and_list       go to state 45
    binary         go to state 46
    unary          go to state 47


State 154

   47 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    ID             shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 156
    expr      go to state 139
    or_expr   go to state 42
    or_list   go to state 43
    and_expr  go to state 44
    and_list  go to state 45
    binary    go to state 46
    unary     go to state 47


State 155

   45 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 45 (stmt)


State 156

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 157


State 157

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 29
    '-'            shift, and go to state 30
    '*'            shift, and go to state 31
    '!'            shift, and go to state 32
    INCOP          shift, and go to state 33
    DECOP          shift, and go to state 34
    '('            shift, and go to state 35
    RETURN         shift, and go to state 86
    IF             shift, and go to state 87
    WHILE          shift, and go to state 88
    FOR            shift, and go to state 89
    BREAK          shift, and go to state 90
    CONTINUE       shift, and go to state 91
    ID             shift, and go to state 36
    PRINT          shift, and go to state 92
    CHAR_CONST     shift, and go to state 37
    STRING         shift, and go to state 38
    INTEGER_CONST  shift, and go to state 39
    ';'            shift, and go to state 93
    '{'            shift, and go to state 17

    compound_stmt  go to state 95
    stmt           go to state 158
    expr           go to state 97
    or_expr        go to state 42
    or_list        go to state 43
    and_expr       go to state 44
    and_list       go to state 45
    binary         go to state 46
    unary          go to state 47


State 158

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 47 (stmt)
