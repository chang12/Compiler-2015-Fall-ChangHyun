Terminals unused in grammar

   '|'
   '/'
   '%'


State 21 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt
    9        | PRINT

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 $@1: %empty

   14 @2: %empty

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'
   19          | type_specifier pointers ID '(' param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'
   32    | PRINT

   33 compound_stmt: '{' local_defs stmt_list '}'

   34 local_defs: def_list

   35 stmt_list: stmt_list stmt
   36          | %empty

   37 stmt: expr ';'
   38     | compound_stmt
   39     | RETURN ';'
   40     | RETURN expr ';'
   41     | ';'
   42     | IF '(' expr ')' stmt
   43     | IF '(' expr ')' stmt ELSE stmt
   44     | WHILE '(' expr ')' stmt
   45     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   46     | BREAK ';'
   47     | CONTINUE ';'
   48     | PRINT

   49 expr_e: expr
   50       | %empty

   51 const_expr: expr

   52 expr: unary '=' expr
   53     | or_expr

   54 or_expr: or_list

   55 or_list: or_list LOGICAL_OR and_expr
   56        | and_expr

   57 and_expr: and_list

   58 and_list: and_list LOGICAL_AND binary
   59         | binary

   60 binary: binary RELOP binary
   61       | binary EQUOP binary
   62       | binary '+' binary
   63       | binary '-' binary
   64       | unary

   65 unary: '(' expr ')'
   66      | '(' unary ')'
   67      | INTEGER_CONST
   68      | CHAR_CONST
   69      | STRING
   70      | ID
   71      | '-' unary
   72      | '!' unary
   73      | unary INCOP
   74      | unary DECOP
   75      | INCOP unary
   76      | DECOP unary
   77      | '&' unary
   78      | '*' unary
   79      | unary '[' expr ']'
   80      | unary '.' ID
   81      | unary STRUCTOP ID
   82      | unary '(' args ')'
   83      | unary '(' ')'

   84 args: expr
   85     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 72
'%' (37)
'&' (38) 77
'(' (40) 17 18 19 42 43 44 45 65 66 82 83
')' (41) 17 18 19 42 43 44 45 65 66 82 83
'*' (42) 20 78
'+' (43) 62
',' (44) 23 85
'-' (45) 63 71
'.' (46) 80
'/' (47)
';' (59) 4 5 6 7 28 29 30 31 37 39 40 41 45 46 47
'=' (61) 52
'[' (91) 5 25 29 79
']' (93) 5 25 29 79
'{' (123) 15 33
'|' (124)
'}' (125) 15 33
error (256)
LOGICAL_OR (258) 55
LOGICAL_AND (259) 58
EQUOP (260) 61
RELOP (261) 60
INCOP (262) 73 75
DECOP (263) 74 76
STRUCTOP (264) 81
TYPE (265) 10
VOID (266) 11 18
STRUCT (267) 15 16
RETURN (268) 39 40
IF (269) 42 43
ELSE (270) 43
WHILE (271) 44
FOR (272) 45
BREAK (273) 46
CONTINUE (274) 47
ID (275) 4 5 15 16 17 18 19 24 25 28 29 70 80 81
PRINT (276) 9 32 48
CHAR_CONST (277) 68
STRING (278) 69
INTEGER_CONST (279) 67


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
ext_def_list (45)
    on left: 2 3, on right: 1 2
ext_def (46)
    on left: 4 5 6 7 8 9, on right: 2
type_specifier (47)
    on left: 10 11 12, on right: 4 5 7 17 18 19 24 25 28 29 30
struct_specifier (48)
    on left: 15 16, on right: 12
$@1 (49)
    on left: 13, on right: 15
@2 (50)
    on left: 14, on right: 15
func_decl (51)
    on left: 17 18 19, on right: 6 8 31
pointers (52)
    on left: 20 21, on right: 4 5 17 18 19 24 25 28 29
param_list (53)
    on left: 22 23, on right: 19 23
param_decl (54)
    on left: 24 25, on right: 22 23
def_list (55)
    on left: 26 27, on right: 15 26 34
def (56)
    on left: 28 29 30 31 32, on right: 26
compound_stmt (57)
    on left: 33, on right: 8 38
local_defs (58)
    on left: 34, on right: 33
stmt_list (59)
    on left: 35 36, on right: 33 35
stmt (60)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 35 42 43
    44 45
expr_e (61)
    on left: 49 50, on right: 45
const_expr (62)
    on left: 51, on right: 5 25 29
expr (63)
    on left: 52 53, on right: 37 40 42 43 44 49 51 52 65 79 84 85
or_expr (64)
    on left: 54, on right: 53
or_list (65)
    on left: 55 56, on right: 54 55
and_expr (66)
    on left: 57, on right: 55 56
and_list (67)
    on left: 58 59, on right: 57 58
binary (68)
    on left: 60 61 62 63 64, on right: 58 59 60 61 62 63
unary (69)
    on left: 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
    83, on right: 52 64 66 71 72 73 74 75 76 77 78 79 80 81 82 83
args (70)
    on left: 84 85, on right: 82 85


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 7

    $default  reduce using rule 1 (program)

    ext_def           go to state 8
    type_specifier    go to state 9
    struct_specifier  go to state 10
    func_decl         go to state 11


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   15 struct_specifier: STRUCT . ID '{' $@1 def_list @2 '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 12


State 7

    9 ext_def: PRINT .

    $default  reduce using rule 9 (ext_def)


State 8

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 9

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 14

    $default  reduce using rule 21 (pointers)

    pointers  go to state 15


State 10

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 11

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 16
    '{'  shift, and go to state 17

    compound_stmt  go to state 18


State 12

   15 struct_specifier: STRUCT ID . '{' $@1 def_list @2 '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 19

    $default  reduce using rule 16 (struct_specifier)


State 13

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 14

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 15

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 20


State 16

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 17

   33 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 21
    local_defs  go to state 22


State 18

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 19

   15 struct_specifier: STRUCT ID '{' . $@1 def_list @2 '}'

    $default  reduce using rule 13 ($@1)

    $@1  go to state 23


State 20

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 24
    '('  shift, and go to state 25
    ';'  shift, and go to state 26


State 21

   26 def_list: def_list . def
   34 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 27

    PRINT     [reduce using rule 34 (local_defs)]
    $default  reduce using rule 34 (local_defs)

    type_specifier    go to state 28
    struct_specifier  go to state 10
    func_decl         go to state 29
    def               go to state 30


State 22

   33 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 31


State 23

   15 struct_specifier: STRUCT ID '{' $@1 . def_list @2 '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 32


State 24

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 44
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 25

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . param_list ')'

    ')'     shift, and go to state 52
    TYPE    shift, and go to state 4
    VOID    shift, and go to state 53
    STRUCT  shift, and go to state 6

    type_specifier    go to state 54
    struct_specifier  go to state 10
    param_list        go to state 55
    param_decl        go to state 56


State 26

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 27

   32 def: PRINT .

    $default  reduce using rule 32 (def)


State 28

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 57

    $default  reduce using rule 21 (pointers)

    pointers  go to state 58


State 29

   31 def: func_decl . ';'

    ';'  shift, and go to state 59


State 30

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 31

   33 compound_stmt: '{' local_defs stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17
    '}'            shift, and go to state 68

    compound_stmt  go to state 69
    stmt           go to state 70
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 32

   15 struct_specifier: STRUCT ID '{' $@1 def_list . @2 '}'
   26 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 27

    $default  reduce using rule 14 (@2)

    type_specifier    go to state 28
    struct_specifier  go to state 10
    @2                go to state 72
    func_decl         go to state 29
    def               go to state 30


State 33

   77 unary: '&' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 73


State 34

   71 unary: '-' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 74


State 35

   78 unary: '*' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 75


State 36

   72 unary: '!' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 76


State 37

   75 unary: INCOP . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 77


State 38

   76 unary: DECOP . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 78


State 39

   65 unary: '(' . expr ')'
   66      | '(' . unary ')'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 79
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 80


State 40

   70 unary: ID .

    $default  reduce using rule 70 (unary)


State 41

   68 unary: CHAR_CONST .

    $default  reduce using rule 68 (unary)


State 42

   69 unary: STRING .

    $default  reduce using rule 69 (unary)


State 43

   67 unary: INTEGER_CONST .

    $default  reduce using rule 67 (unary)


State 44

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 81


State 45

   51 const_expr: expr .

    $default  reduce using rule 51 (const_expr)


State 46

   53 expr: or_expr .

    $default  reduce using rule 53 (expr)


State 47

   54 or_expr: or_list .
   55 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 82

    $default  reduce using rule 54 (or_expr)


State 48

   56 or_list: and_expr .

    $default  reduce using rule 56 (or_list)


State 49

   57 and_expr: and_list .
   58 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 83

    $default  reduce using rule 57 (and_expr)


State 50

   59 and_list: binary .
   60 binary: binary . RELOP binary
   61       | binary . EQUOP binary
   62       | binary . '+' binary
   63       | binary . '-' binary

    EQUOP  shift, and go to state 84
    RELOP  shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87

    $default  reduce using rule 59 (and_list)


State 51

   52 expr: unary . '=' expr
   64 binary: unary .
   73 unary: unary . INCOP
   74      | unary . DECOP
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    '='       shift, and go to state 88
    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 64 (binary)


State 52

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 53

   11 type_specifier: VOID .
   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 95

    $default  reduce using rule 11 (type_specifier)


State 54

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 96


State 55

   19 func_decl: type_specifier pointers ID '(' param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 97
    ')'  shift, and go to state 98


State 56

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 57

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 58

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 99


State 59

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 60

   39 stmt: RETURN . ';'
   40     | RETURN . expr ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 100

    expr      go to state 101
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 61

   42 stmt: IF . '(' expr ')' stmt
   43     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 102


State 62

   44 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 103


State 63

   45 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 104


State 64

   46 stmt: BREAK . ';'

    ';'  shift, and go to state 105


State 65

   47 stmt: CONTINUE . ';'

    ';'  shift, and go to state 106


State 66

   48 stmt: PRINT .

    $default  reduce using rule 48 (stmt)


State 67

   41 stmt: ';' .

    $default  reduce using rule 41 (stmt)


State 68

   33 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 33 (compound_stmt)


State 69

   38 stmt: compound_stmt .

    $default  reduce using rule 38 (stmt)


State 70

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 71

   37 stmt: expr . ';'

    ';'  shift, and go to state 107


State 72

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 . '}'

    '}'  shift, and go to state 108


State 73

   73 unary: unary . INCOP
   74      | unary . DECOP
   77      | '&' unary .
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 77 (unary)


State 74

   71 unary: '-' unary .
   73      | unary . INCOP
   74      | unary . DECOP
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 71 (unary)


State 75

   73 unary: unary . INCOP
   74      | unary . DECOP
   78      | '*' unary .
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 78 (unary)


State 76

   72 unary: '!' unary .
   73      | unary . INCOP
   74      | unary . DECOP
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 72 (unary)


State 77

   73 unary: unary . INCOP
   74      | unary . DECOP
   75      | INCOP unary .
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 75 (unary)


State 78

   73 unary: unary . INCOP
   74      | unary . DECOP
   76      | DECOP unary .
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 76 (unary)


State 79

   65 unary: '(' expr . ')'

    ')'  shift, and go to state 109


State 80

   52 expr: unary . '=' expr
   64 binary: unary .
   66 unary: '(' unary . ')'
   73      | unary . INCOP
   74      | unary . DECOP
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    '='       shift, and go to state 88
    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    ')'       shift, and go to state 110
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 64 (binary)


State 81

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 111


State 82

   55 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    and_expr  go to state 112
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 113


State 83

   58 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 114
    unary   go to state 113


State 84

   61 binary: binary EQUOP . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 115
    unary   go to state 113


State 85

   60 binary: binary RELOP . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 116
    unary   go to state 113


State 86

   62 binary: binary '+' . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 117
    unary   go to state 113


State 87

   63 binary: binary '-' . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 118
    unary   go to state 113


State 88

   52 expr: unary '=' . expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 119
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 89

   73 unary: unary INCOP .

    $default  reduce using rule 73 (unary)


State 90

   74 unary: unary DECOP .

    $default  reduce using rule 74 (unary)


State 91

   79 unary: unary '[' . expr ']'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 120
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 92

   82 unary: unary '(' . args ')'
   83      | unary '(' . ')'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ')'            shift, and go to state 121
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 122
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51
    args      go to state 123


State 93

   80 unary: unary '.' . ID

    ID  shift, and go to state 124


State 94

   81 unary: unary STRUCTOP . ID

    ID  shift, and go to state 125


State 95

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 96

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 126


State 97

   23 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 54
    struct_specifier  go to state 10
    param_decl        go to state 127


State 98

   19 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 99

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 128
    '('  shift, and go to state 25
    ';'  shift, and go to state 129


State 100

   39 stmt: RETURN ';' .

    $default  reduce using rule 39 (stmt)


State 101

   40 stmt: RETURN expr . ';'

    ';'  shift, and go to state 130


State 102

   42 stmt: IF '(' . expr ')' stmt
   43     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 131
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 103

   44 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 132
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 104

   45 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 133
    expr      go to state 134
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 105

   46 stmt: BREAK ';' .

    $default  reduce using rule 46 (stmt)


State 106

   47 stmt: CONTINUE ';' .

    $default  reduce using rule 47 (stmt)


State 107

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


State 108

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}' .

    $default  reduce using rule 15 (struct_specifier)


State 109

   65 unary: '(' expr ')' .

    $default  reduce using rule 65 (unary)


State 110

   66 unary: '(' unary ')' .

    $default  reduce using rule 66 (unary)


State 111

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 112

   55 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 55 (or_list)


State 113

   64 binary: unary .
   73 unary: unary . INCOP
   74      | unary . DECOP
   79      | unary . '[' expr ']'
   80      | unary . '.' ID
   81      | unary . STRUCTOP ID
   82      | unary . '(' args ')'
   83      | unary . '(' ')'

    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '.'       shift, and go to state 93
    STRUCTOP  shift, and go to state 94

    $default  reduce using rule 64 (binary)


State 114

   58 and_list: and_list LOGICAL_AND binary .
   60 binary: binary . RELOP binary
   61       | binary . EQUOP binary
   62       | binary . '+' binary
   63       | binary . '-' binary

    EQUOP  shift, and go to state 84
    RELOP  shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87

    $default  reduce using rule 58 (and_list)


State 115

   60 binary: binary . RELOP binary
   61       | binary . EQUOP binary
   61       | binary EQUOP binary .
   62       | binary . '+' binary
   63       | binary . '-' binary

    RELOP  shift, and go to state 85
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87

    $default  reduce using rule 61 (binary)


State 116

   60 binary: binary . RELOP binary
   60       | binary RELOP binary .
   61       | binary . EQUOP binary
   62       | binary . '+' binary
   63       | binary . '-' binary

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 60 (binary)


State 117

   60 binary: binary . RELOP binary
   61       | binary . EQUOP binary
   62       | binary . '+' binary
   62       | binary '+' binary .
   63       | binary . '-' binary

    $default  reduce using rule 62 (binary)


State 118

   60 binary: binary . RELOP binary
   61       | binary . EQUOP binary
   62       | binary . '+' binary
   63       | binary . '-' binary
   63       | binary '-' binary .

    $default  reduce using rule 63 (binary)


State 119

   52 expr: unary '=' expr .

    $default  reduce using rule 52 (expr)


State 120

   79 unary: unary '[' expr . ']'

    ']'  shift, and go to state 135


State 121

   83 unary: unary '(' ')' .

    $default  reduce using rule 83 (unary)


State 122

   84 args: expr .

    $default  reduce using rule 84 (args)


State 123

   82 unary: unary '(' args . ')'
   85 args: args . ',' expr

    ','  shift, and go to state 136
    ')'  shift, and go to state 137


State 124

   80 unary: unary '.' ID .

    $default  reduce using rule 80 (unary)


State 125

   81 unary: unary STRUCTOP ID .

    $default  reduce using rule 81 (unary)


State 126

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 138

    $default  reduce using rule 24 (param_decl)


State 127

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 128

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 139
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 129

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 130

   40 stmt: RETURN expr ';' .

    $default  reduce using rule 40 (stmt)


State 131

   42 stmt: IF '(' expr . ')' stmt
   43     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 140


State 132

   44 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 141


State 133

   45 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 142


State 134

   49 expr_e: expr .

    $default  reduce using rule 49 (expr_e)


State 135

   79 unary: unary '[' expr ']' .

    $default  reduce using rule 79 (unary)


State 136

   85 args: args ',' . expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 143
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 137

   82 unary: unary '(' args ')' .

    $default  reduce using rule 82 (unary)


State 138

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 144
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 139

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 145


State 140

   42 stmt: IF '(' expr ')' . stmt
   43     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 146
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 141

   44 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 147
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 142

   45 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 148
    expr      go to state 134
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 143

   85 args: args ',' expr .

    $default  reduce using rule 85 (args)


State 144

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 149


State 145

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 150


State 146

   42 stmt: IF '(' expr ')' stmt .
   43     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 151

    ELSE      [reduce using rule 42 (stmt)]
    $default  reduce using rule 42 (stmt)


State 147

   44 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 44 (stmt)


State 148

   45 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 152


State 149

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 150

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 151

   43 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 153
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 152

   45 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 50 (expr_e)

    expr_e    go to state 154
    expr      go to state 134
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 153

   43 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 43 (stmt)


State 154

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 155


State 155

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 156
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 156

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 45 (stmt)
