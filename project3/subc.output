Terminals unused in grammar

   '|'
   '/'
   '%'


State 21 conflicts: 1 shift/reduce
State 25 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt
    9        | PRINT

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 $@1: %empty

   14 @2: %empty

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}'
   16                 | STRUCT ID

   17 func_decl: type_specifier pointers ID '(' ')'
   18          | type_specifier pointers ID '(' VOID ')'

   19 @3: %empty

   20 func_decl: type_specifier pointers ID '(' @3 param_list ')'

   21 pointers: '*'
   22         | %empty

   23 param_list: param_decl
   24           | param_list ',' param_decl

   25 param_decl: type_specifier pointers ID
   26           | type_specifier pointers ID '[' const_expr ']'

   27 def_list: def_list def
   28         | %empty

   29 def: type_specifier pointers ID ';'
   30    | type_specifier pointers ID '[' const_expr ']' ';'
   31    | type_specifier ';'
   32    | func_decl ';'
   33    | PRINT

   34 compound_stmt: '{' local_defs stmt_list '}'

   35 local_defs: def_list

   36 stmt_list: stmt_list stmt
   37          | %empty

   38 stmt: expr ';'
   39     | compound_stmt
   40     | RETURN ';'
   41     | RETURN expr ';'
   42     | ';'
   43     | IF '(' expr ')' stmt
   44     | IF '(' expr ')' stmt ELSE stmt
   45     | WHILE '(' expr ')' stmt
   46     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   47     | BREAK ';'
   48     | CONTINUE ';'
   49     | PRINT

   50 expr_e: expr
   51       | %empty

   52 const_expr: expr

   53 expr: unary '=' expr
   54     | or_expr

   55 or_expr: or_list

   56 or_list: or_list LOGICAL_OR and_expr
   57        | and_expr

   58 and_expr: and_list

   59 and_list: and_list LOGICAL_AND binary
   60         | binary

   61 binary: binary RELOP binary
   62       | binary EQUOP binary
   63       | binary '+' binary
   64       | binary '-' binary
   65       | unary

   66 unary: '(' expr ')'
   67      | '(' unary ')'
   68      | INTEGER_CONST
   69      | CHAR_CONST
   70      | STRING
   71      | ID
   72      | '-' unary
   73      | '!' unary
   74      | unary INCOP
   75      | unary DECOP
   76      | INCOP unary
   77      | DECOP unary
   78      | '&' unary
   79      | '*' unary
   80      | unary '[' expr ']'
   81      | unary '.' ID
   82      | unary STRUCTOP ID
   83      | unary '(' args ')'
   84      | unary '(' ')'

   85 args: expr
   86     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73
'%' (37)
'&' (38) 78
'(' (40) 17 18 20 43 44 45 46 66 67 83 84
')' (41) 17 18 20 43 44 45 46 66 67 83 84
'*' (42) 21 79
'+' (43) 63
',' (44) 24 86
'-' (45) 64 72
'.' (46) 81
'/' (47)
';' (59) 4 5 6 7 29 30 31 32 38 40 41 42 46 47 48
'=' (61) 53
'[' (91) 5 26 30 80
']' (93) 5 26 30 80
'{' (123) 15 34
'|' (124)
'}' (125) 15 34
error (256)
LOGICAL_OR (258) 56
LOGICAL_AND (259) 59
EQUOP (260) 62
RELOP (261) 61
INCOP (262) 74 76
DECOP (263) 75 77
STRUCTOP (264) 82
TYPE (265) 10
VOID (266) 11 18
STRUCT (267) 15 16
RETURN (268) 40 41
IF (269) 43 44
ELSE (270) 44
WHILE (271) 45
FOR (272) 46
BREAK (273) 47
CONTINUE (274) 48
ID (275) 4 5 15 16 17 18 20 25 26 29 30 71 81 82
PRINT (276) 9 33 49
CHAR_CONST (277) 69
STRING (278) 70
INTEGER_CONST (279) 68


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
ext_def_list (45)
    on left: 2 3, on right: 1 2
ext_def (46)
    on left: 4 5 6 7 8 9, on right: 2
type_specifier (47)
    on left: 10 11 12, on right: 4 5 7 17 18 20 25 26 29 30 31
struct_specifier (48)
    on left: 15 16, on right: 12
$@1 (49)
    on left: 13, on right: 15
@2 (50)
    on left: 14, on right: 15
func_decl (51)
    on left: 17 18 20, on right: 6 8 32
@3 (52)
    on left: 19, on right: 20
pointers (53)
    on left: 21 22, on right: 4 5 17 18 20 25 26 29 30
param_list (54)
    on left: 23 24, on right: 20 24
param_decl (55)
    on left: 25 26, on right: 23 24
def_list (56)
    on left: 27 28, on right: 15 27 35
def (57)
    on left: 29 30 31 32 33, on right: 27
compound_stmt (58)
    on left: 34, on right: 8 39
local_defs (59)
    on left: 35, on right: 34
stmt_list (60)
    on left: 36 37, on right: 34 36
stmt (61)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49, on right: 36 43 44
    45 46
expr_e (62)
    on left: 50 51, on right: 46
const_expr (63)
    on left: 52, on right: 5 26 30
expr (64)
    on left: 53 54, on right: 38 41 43 44 45 50 52 53 66 80 85 86
or_expr (65)
    on left: 55, on right: 54
or_list (66)
    on left: 56 57, on right: 55 56
and_expr (67)
    on left: 58, on right: 56 57
and_list (68)
    on left: 59 60, on right: 58 59
binary (69)
    on left: 61 62 63 64 65, on right: 59 60 61 62 63 64
unary (70)
    on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84, on right: 53 65 67 72 73 74 75 76 77 78 79 80 81 82 83 84
args (71)
    on left: 85 86, on right: 83 86


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 7

    $default  reduce using rule 1 (program)

    ext_def           go to state 8
    type_specifier    go to state 9
    struct_specifier  go to state 10
    func_decl         go to state 11


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   15 struct_specifier: STRUCT . ID '{' $@1 def_list @2 '}'
   16                 | STRUCT . ID

    ID  shift, and go to state 12


State 7

    9 ext_def: PRINT .

    $default  reduce using rule 9 (ext_def)


State 8

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 9

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   20          | type_specifier . pointers ID '(' @3 param_list ')'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 14

    $default  reduce using rule 22 (pointers)

    pointers  go to state 15


State 10

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 11

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 16
    '{'  shift, and go to state 17

    compound_stmt  go to state 18


State 12

   15 struct_specifier: STRUCT ID . '{' $@1 def_list @2 '}'
   16                 | STRUCT ID .

    '{'  shift, and go to state 19

    $default  reduce using rule 16 (struct_specifier)


State 13

   21 pointers: '*' .

    $default  reduce using rule 21 (pointers)


State 14

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 15

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   20          | type_specifier pointers . ID '(' @3 param_list ')'

    ID  shift, and go to state 20


State 16

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 17

   34 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 28 (def_list)

    def_list    go to state 21
    local_defs  go to state 22


State 18

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 19

   15 struct_specifier: STRUCT ID '{' . $@1 def_list @2 '}'

    $default  reduce using rule 13 ($@1)

    $@1  go to state 23


State 20

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   20          | type_specifier pointers ID . '(' @3 param_list ')'

    '['  shift, and go to state 24
    '('  shift, and go to state 25
    ';'  shift, and go to state 26


State 21

   27 def_list: def_list . def
   35 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 27

    PRINT     [reduce using rule 35 (local_defs)]
    $default  reduce using rule 35 (local_defs)

    type_specifier    go to state 28
    struct_specifier  go to state 10
    func_decl         go to state 29
    def               go to state 30


State 22

   34 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 31


State 23

   15 struct_specifier: STRUCT ID '{' $@1 . def_list @2 '}'

    $default  reduce using rule 28 (def_list)

    def_list  go to state 32


State 24

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 44
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 25

   17 func_decl: type_specifier pointers ID '(' . ')'
   18          | type_specifier pointers ID '(' . VOID ')'
   20          | type_specifier pointers ID '(' . @3 param_list ')'

    ')'   shift, and go to state 52
    VOID  shift, and go to state 53

    VOID      [reduce using rule 19 (@3)]
    $default  reduce using rule 19 (@3)

    @3  go to state 54


State 26

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 27

   33 def: PRINT .

    $default  reduce using rule 33 (def)


State 28

   17 func_decl: type_specifier . pointers ID '(' ')'
   18          | type_specifier . pointers ID '(' VOID ')'
   20          | type_specifier . pointers ID '(' @3 param_list ')'
   29 def: type_specifier . pointers ID ';'
   30    | type_specifier . pointers ID '[' const_expr ']' ';'
   31    | type_specifier . ';'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 55

    $default  reduce using rule 22 (pointers)

    pointers  go to state 56


State 29

   32 def: func_decl . ';'

    ';'  shift, and go to state 57


State 30

   27 def_list: def_list def .

    $default  reduce using rule 27 (def_list)


State 31

   34 compound_stmt: '{' local_defs stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 40
    PRINT          shift, and go to state 64
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 65
    '{'            shift, and go to state 17
    '}'            shift, and go to state 66

    compound_stmt  go to state 67
    stmt           go to state 68
    expr           go to state 69
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 32

   15 struct_specifier: STRUCT ID '{' $@1 def_list . @2 '}'
   27 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 27

    $default  reduce using rule 14 (@2)

    type_specifier    go to state 28
    struct_specifier  go to state 10
    @2                go to state 70
    func_decl         go to state 29
    def               go to state 30


State 33

   78 unary: '&' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 71


State 34

   72 unary: '-' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 72


State 35

   79 unary: '*' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 73


State 36

   73 unary: '!' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 74


State 37

   76 unary: INCOP . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 75


State 38

   77 unary: DECOP . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 76


State 39

   66 unary: '(' . expr ')'
   67      | '(' . unary ')'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 77
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 78


State 40

   71 unary: ID .

    $default  reduce using rule 71 (unary)


State 41

   69 unary: CHAR_CONST .

    $default  reduce using rule 69 (unary)


State 42

   70 unary: STRING .

    $default  reduce using rule 70 (unary)


State 43

   68 unary: INTEGER_CONST .

    $default  reduce using rule 68 (unary)


State 44

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 79


State 45

   52 const_expr: expr .

    $default  reduce using rule 52 (const_expr)


State 46

   54 expr: or_expr .

    $default  reduce using rule 54 (expr)


State 47

   55 or_expr: or_list .
   56 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 80

    $default  reduce using rule 55 (or_expr)


State 48

   57 or_list: and_expr .

    $default  reduce using rule 57 (or_list)


State 49

   58 and_expr: and_list .
   59 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 81

    $default  reduce using rule 58 (and_expr)


State 50

   60 and_list: binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 82
    RELOP  shift, and go to state 83
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85

    $default  reduce using rule 60 (and_list)


State 51

   53 expr: unary . '=' expr
   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    '='       shift, and go to state 86
    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 65 (binary)


State 52

   17 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 17 (func_decl)


State 53

   18 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 93


State 54

   20 func_decl: type_specifier pointers ID '(' @3 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 94
    struct_specifier  go to state 10
    param_list        go to state 95
    param_decl        go to state 96


State 55

   31 def: type_specifier ';' .

    $default  reduce using rule 31 (def)


State 56

   17 func_decl: type_specifier pointers . ID '(' ')'
   18          | type_specifier pointers . ID '(' VOID ')'
   20          | type_specifier pointers . ID '(' @3 param_list ')'
   29 def: type_specifier pointers . ID ';'
   30    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 97


State 57

   32 def: func_decl ';' .

    $default  reduce using rule 32 (def)


State 58

   40 stmt: RETURN . ';'
   41     | RETURN . expr ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 98

    expr      go to state 99
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 59

   43 stmt: IF . '(' expr ')' stmt
   44     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 100


State 60

   45 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 101


State 61

   46 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 102


State 62

   47 stmt: BREAK . ';'

    ';'  shift, and go to state 103


State 63

   48 stmt: CONTINUE . ';'

    ';'  shift, and go to state 104


State 64

   49 stmt: PRINT .

    $default  reduce using rule 49 (stmt)


State 65

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 66

   34 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 34 (compound_stmt)


State 67

   39 stmt: compound_stmt .

    $default  reduce using rule 39 (stmt)


State 68

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 69

   38 stmt: expr . ';'

    ';'  shift, and go to state 105


State 70

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 . '}'

    '}'  shift, and go to state 106


State 71

   74 unary: unary . INCOP
   75      | unary . DECOP
   78      | '&' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 78 (unary)


State 72

   72 unary: '-' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 72 (unary)


State 73

   74 unary: unary . INCOP
   75      | unary . DECOP
   79      | '*' unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 79 (unary)


State 74

   73 unary: '!' unary .
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 73 (unary)


State 75

   74 unary: unary . INCOP
   75      | unary . DECOP
   76      | INCOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 76 (unary)


State 76

   74 unary: unary . INCOP
   75      | unary . DECOP
   77      | DECOP unary .
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 77 (unary)


State 77

   66 unary: '(' expr . ')'

    ')'  shift, and go to state 107


State 78

   53 expr: unary . '=' expr
   65 binary: unary .
   67 unary: '(' unary . ')'
   74      | unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    '='       shift, and go to state 86
    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    ')'       shift, and go to state 108
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 65 (binary)


State 79

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 109


State 80

   56 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    and_expr  go to state 110
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 111


State 81

   59 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 112
    unary   go to state 111


State 82

   62 binary: binary EQUOP . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 113
    unary   go to state 111


State 83

   61 binary: binary RELOP . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 114
    unary   go to state 111


State 84

   63 binary: binary '+' . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 115
    unary   go to state 111


State 85

   64 binary: binary '-' . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 116
    unary   go to state 111


State 86

   53 expr: unary '=' . expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 117
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 87

   74 unary: unary INCOP .

    $default  reduce using rule 74 (unary)


State 88

   75 unary: unary DECOP .

    $default  reduce using rule 75 (unary)


State 89

   80 unary: unary '[' . expr ']'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 118
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 90

   83 unary: unary '(' . args ')'
   84      | unary '(' . ')'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ')'            shift, and go to state 119
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 120
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51
    args      go to state 121


State 91

   81 unary: unary '.' . ID

    ID  shift, and go to state 122


State 92

   82 unary: unary STRUCTOP . ID

    ID  shift, and go to state 123


State 93

   18 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 94

   25 param_decl: type_specifier . pointers ID
   26           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 13

    $default  reduce using rule 22 (pointers)

    pointers  go to state 124


State 95

   20 func_decl: type_specifier pointers ID '(' @3 param_list . ')'
   24 param_list: param_list . ',' param_decl

    ','  shift, and go to state 125
    ')'  shift, and go to state 126


State 96

   23 param_list: param_decl .

    $default  reduce using rule 23 (param_list)


State 97

   17 func_decl: type_specifier pointers ID . '(' ')'
   18          | type_specifier pointers ID . '(' VOID ')'
   20          | type_specifier pointers ID . '(' @3 param_list ')'
   29 def: type_specifier pointers ID . ';'
   30    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 127
    '('  shift, and go to state 25
    ';'  shift, and go to state 128


State 98

   40 stmt: RETURN ';' .

    $default  reduce using rule 40 (stmt)


State 99

   41 stmt: RETURN expr . ';'

    ';'  shift, and go to state 129


State 100

   43 stmt: IF '(' . expr ')' stmt
   44     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 130
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 101

   45 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 131
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 102

   46 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 132
    expr      go to state 133
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 103

   47 stmt: BREAK ';' .

    $default  reduce using rule 47 (stmt)


State 104

   48 stmt: CONTINUE ';' .

    $default  reduce using rule 48 (stmt)


State 105

   38 stmt: expr ';' .

    $default  reduce using rule 38 (stmt)


State 106

   15 struct_specifier: STRUCT ID '{' $@1 def_list @2 '}' .

    $default  reduce using rule 15 (struct_specifier)


State 107

   66 unary: '(' expr ')' .

    $default  reduce using rule 66 (unary)


State 108

   67 unary: '(' unary ')' .

    $default  reduce using rule 67 (unary)


State 109

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 110

   56 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 56 (or_list)


State 111

   65 binary: unary .
   74 unary: unary . INCOP
   75      | unary . DECOP
   80      | unary . '[' expr ']'
   81      | unary . '.' ID
   82      | unary . STRUCTOP ID
   83      | unary . '(' args ')'
   84      | unary . '(' ')'

    INCOP     shift, and go to state 87
    DECOP     shift, and go to state 88
    '['       shift, and go to state 89
    '('       shift, and go to state 90
    '.'       shift, and go to state 91
    STRUCTOP  shift, and go to state 92

    $default  reduce using rule 65 (binary)


State 112

   59 and_list: and_list LOGICAL_AND binary .
   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    EQUOP  shift, and go to state 82
    RELOP  shift, and go to state 83
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85

    $default  reduce using rule 59 (and_list)


State 113

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   62       | binary EQUOP binary .
   63       | binary . '+' binary
   64       | binary . '-' binary

    RELOP  shift, and go to state 83
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85

    $default  reduce using rule 62 (binary)


State 114

   61 binary: binary . RELOP binary
   61       | binary RELOP binary .
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85

    $default  reduce using rule 61 (binary)


State 115

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   63       | binary '+' binary .
   64       | binary . '-' binary

    $default  reduce using rule 63 (binary)


State 116

   61 binary: binary . RELOP binary
   62       | binary . EQUOP binary
   63       | binary . '+' binary
   64       | binary . '-' binary
   64       | binary '-' binary .

    $default  reduce using rule 64 (binary)


State 117

   53 expr: unary '=' expr .

    $default  reduce using rule 53 (expr)


State 118

   80 unary: unary '[' expr . ']'

    ']'  shift, and go to state 134


State 119

   84 unary: unary '(' ')' .

    $default  reduce using rule 84 (unary)


State 120

   85 args: expr .

    $default  reduce using rule 85 (args)


State 121

   83 unary: unary '(' args . ')'
   86 args: args . ',' expr

    ','  shift, and go to state 135
    ')'  shift, and go to state 136


State 122

   81 unary: unary '.' ID .

    $default  reduce using rule 81 (unary)


State 123

   82 unary: unary STRUCTOP ID .

    $default  reduce using rule 82 (unary)


State 124

   25 param_decl: type_specifier pointers . ID
   26           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 137


State 125

   24 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 94
    struct_specifier  go to state 10
    param_decl        go to state 138


State 126

   20 func_decl: type_specifier pointers ID '(' @3 param_list ')' .

    $default  reduce using rule 20 (func_decl)


State 127

   30 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 139
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 128

   29 def: type_specifier pointers ID ';' .

    $default  reduce using rule 29 (def)


State 129

   41 stmt: RETURN expr ';' .

    $default  reduce using rule 41 (stmt)


State 130

   43 stmt: IF '(' expr . ')' stmt
   44     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 140


State 131

   45 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 141


State 132

   46 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 142


State 133

   50 expr_e: expr .

    $default  reduce using rule 50 (expr_e)


State 134

   80 unary: unary '[' expr ']' .

    $default  reduce using rule 80 (unary)


State 135

   86 args: args ',' . expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 143
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 136

   83 unary: unary '(' args ')' .

    $default  reduce using rule 83 (unary)


State 137

   25 param_decl: type_specifier pointers ID .
   26           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 144

    $default  reduce using rule 25 (param_decl)


State 138

   24 param_list: param_list ',' param_decl .

    $default  reduce using rule 24 (param_list)


State 139

   30 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 145


State 140

   43 stmt: IF '(' expr ')' . stmt
   44     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 40
    PRINT          shift, and go to state 64
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 65
    '{'            shift, and go to state 17

    compound_stmt  go to state 67
    stmt           go to state 146
    expr           go to state 69
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 141

   45 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 40
    PRINT          shift, and go to state 64
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 65
    '{'            shift, and go to state 17

    compound_stmt  go to state 67
    stmt           go to state 147
    expr           go to state 69
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 142

   46 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 148
    expr      go to state 133
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 143

   86 args: args ',' expr .

    $default  reduce using rule 86 (args)


State 144

   26 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 149
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 145

   30 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 150


State 146

   43 stmt: IF '(' expr ')' stmt .
   44     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 151

    ELSE      [reduce using rule 43 (stmt)]
    $default  reduce using rule 43 (stmt)


State 147

   45 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 45 (stmt)


State 148

   46 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 152


State 149

   26 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 153


State 150

   30 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 30 (def)


State 151

   44 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 40
    PRINT          shift, and go to state 64
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 65
    '{'            shift, and go to state 17

    compound_stmt  go to state 67
    stmt           go to state 154
    expr           go to state 69
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 152

   46 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 51 (expr_e)

    expr_e    go to state 155
    expr      go to state 133
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 153

   26 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 26 (param_decl)


State 154

   44 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 44 (stmt)


State 155

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 156


State 156

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 40
    PRINT          shift, and go to state 64
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 65
    '{'            shift, and go to state 17

    compound_stmt  go to state 67
    stmt           go to state 157
    expr           go to state 69
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 157

   46 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 46 (stmt)
