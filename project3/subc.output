Terminals unused in grammar

   '|'
   '/'
   '%'


State 21 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt
    9        | PRINT

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 struct_specifier: STRUCT ID '{' def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'
   17          | type_specifier pointers ID '(' param_list ')'

   18 pointers: '*'
   19         | %empty

   20 param_list: param_decl
   21           | param_list ',' param_decl

   22 param_decl: type_specifier pointers ID
   23           | type_specifier pointers ID '[' const_expr ']'

   24 def_list: def_list def
   25         | %empty

   26 def: type_specifier pointers ID ';'
   27    | type_specifier pointers ID '[' const_expr ']' ';'
   28    | type_specifier ';'
   29    | func_decl ';'
   30    | PRINT

   31 compound_stmt: '{' local_defs stmt_list '}'

   32 local_defs: def_list

   33 stmt_list: stmt_list stmt
   34          | %empty

   35 stmt: expr ';'
   36     | compound_stmt
   37     | RETURN ';'
   38     | RETURN expr ';'
   39     | ';'
   40     | IF '(' expr ')' stmt
   41     | IF '(' expr ')' stmt ELSE stmt
   42     | WHILE '(' expr ')' stmt
   43     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   44     | BREAK ';'
   45     | CONTINUE ';'
   46     | PRINT

   47 expr_e: expr
   48       | %empty

   49 const_expr: expr

   50 expr: unary '=' expr
   51     | or_expr

   52 or_expr: or_list

   53 or_list: or_list LOGICAL_OR and_expr
   54        | and_expr

   55 and_expr: and_list

   56 and_list: and_list LOGICAL_AND binary
   57         | binary

   58 binary: binary RELOP binary
   59       | binary EQUOP binary
   60       | binary '+' binary
   61       | binary '-' binary
   62       | unary

   63 unary: '(' expr ')'
   64      | '(' unary ')'
   65      | INTEGER_CONST
   66      | CHAR_CONST
   67      | STRING
   68      | ID
   69      | '-' unary
   70      | '!' unary
   71      | unary INCOP
   72      | unary DECOP
   73      | INCOP unary
   74      | DECOP unary
   75      | '&' unary
   76      | '*' unary
   77      | unary '[' expr ']'
   78      | unary '.' ID
   79      | unary STRUCTOP ID
   80      | unary '(' args ')'
   81      | unary '(' ')'

   82 args: expr
   83     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 70
'%' (37)
'&' (38) 75
'(' (40) 15 16 17 40 41 42 43 63 64 80 81
')' (41) 15 16 17 40 41 42 43 63 64 80 81
'*' (42) 18 76
'+' (43) 60
',' (44) 21 83
'-' (45) 61 69
'.' (46) 78
'/' (47)
';' (59) 4 5 6 7 26 27 28 29 35 37 38 39 43 44 45
'=' (61) 50
'[' (91) 5 23 27 77
']' (93) 5 23 27 77
'{' (123) 13 31
'|' (124)
'}' (125) 13 31
error (256)
LOGICAL_OR (258) 53
LOGICAL_AND (259) 56
EQUOP (260) 59
RELOP (261) 58
INCOP (262) 71 73
DECOP (263) 72 74
STRUCTOP (264) 79
TYPE (265) 10
VOID (266) 11 16
STRUCT (267) 13 14
RETURN (268) 37 38
IF (269) 40 41
ELSE (270) 41
WHILE (271) 42
FOR (272) 43
BREAK (273) 44
CONTINUE (274) 45
ID (275) 4 5 13 14 15 16 17 22 23 26 27 68 78 79
PRINT (276) 9 30 46
CHAR_CONST (277) 66
STRING (278) 67
INTEGER_CONST (279) 65


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
ext_def_list (45)
    on left: 2 3, on right: 1 2
ext_def (46)
    on left: 4 5 6 7 8 9, on right: 2
type_specifier (47)
    on left: 10 11 12, on right: 4 5 7 15 16 17 22 23 26 27 28
struct_specifier (48)
    on left: 13 14, on right: 12
func_decl (49)
    on left: 15 16 17, on right: 6 8 29
pointers (50)
    on left: 18 19, on right: 4 5 15 16 17 22 23 26 27
param_list (51)
    on left: 20 21, on right: 17 21
param_decl (52)
    on left: 22 23, on right: 20 21
def_list (53)
    on left: 24 25, on right: 13 24 32
def (54)
    on left: 26 27 28 29 30, on right: 24
compound_stmt (55)
    on left: 31, on right: 8 36
local_defs (56)
    on left: 32, on right: 31
stmt_list (57)
    on left: 33 34, on right: 31 33
stmt (58)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46, on right: 33 40 41
    42 43
expr_e (59)
    on left: 47 48, on right: 43
const_expr (60)
    on left: 49, on right: 5 23 27
expr (61)
    on left: 50 51, on right: 35 38 40 41 42 47 49 50 63 77 82 83
or_expr (62)
    on left: 52, on right: 51
or_list (63)
    on left: 53 54, on right: 52 53
and_expr (64)
    on left: 55, on right: 53 54
and_list (65)
    on left: 56 57, on right: 55 56
binary (66)
    on left: 58 59 60 61 62, on right: 56 57 58 59 60 61
unary (67)
    on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
    81, on right: 50 62 64 69 70 71 72 73 74 75 76 77 78 79 80 81
args (68)
    on left: 82 83, on right: 80 83


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 7

    $default  reduce using rule 1 (program)

    ext_def           go to state 8
    type_specifier    go to state 9
    struct_specifier  go to state 10
    func_decl         go to state 11


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 12


State 7

    9 ext_def: PRINT .

    $default  reduce using rule 9 (ext_def)


State 8

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 9

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   17          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 14

    $default  reduce using rule 19 (pointers)

    pointers  go to state 15


State 10

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 11

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 16
    '{'  shift, and go to state 17

    compound_stmt  go to state 18


State 12

   13 struct_specifier: STRUCT ID . '{' def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 19

    $default  reduce using rule 14 (struct_specifier)


State 13

   18 pointers: '*' .

    $default  reduce using rule 18 (pointers)


State 14

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 15

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   17          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 20


State 16

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 17

   31 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 25 (def_list)

    def_list    go to state 21
    local_defs  go to state 22


State 18

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 19

   13 struct_specifier: STRUCT ID '{' . def_list '}'

    $default  reduce using rule 25 (def_list)

    def_list  go to state 23


State 20

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   17          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 24
    '('  shift, and go to state 25
    ';'  shift, and go to state 26


State 21

   24 def_list: def_list . def
   32 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 27

    PRINT     [reduce using rule 32 (local_defs)]
    $default  reduce using rule 32 (local_defs)

    type_specifier    go to state 28
    struct_specifier  go to state 10
    func_decl         go to state 29
    def               go to state 30


State 22

   31 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 34 (stmt_list)

    stmt_list  go to state 31


State 23

   13 struct_specifier: STRUCT ID '{' def_list . '}'
   24 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    PRINT   shift, and go to state 27
    '}'     shift, and go to state 32

    type_specifier    go to state 28
    struct_specifier  go to state 10
    func_decl         go to state 29
    def               go to state 30


State 24

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 44
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 25

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   17          | type_specifier pointers ID '(' . param_list ')'

    ')'     shift, and go to state 52
    TYPE    shift, and go to state 4
    VOID    shift, and go to state 53
    STRUCT  shift, and go to state 6

    type_specifier    go to state 54
    struct_specifier  go to state 10
    param_list        go to state 55
    param_decl        go to state 56


State 26

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 27

   30 def: PRINT .

    $default  reduce using rule 30 (def)


State 28

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   17          | type_specifier . pointers ID '(' param_list ')'
   26 def: type_specifier . pointers ID ';'
   27    | type_specifier . pointers ID '[' const_expr ']' ';'
   28    | type_specifier . ';'

    '*'  shift, and go to state 13
    ';'  shift, and go to state 57

    $default  reduce using rule 19 (pointers)

    pointers  go to state 58


State 29

   29 def: func_decl . ';'

    ';'  shift, and go to state 59


State 30

   24 def_list: def_list def .

    $default  reduce using rule 24 (def_list)


State 31

   31 compound_stmt: '{' local_defs stmt_list . '}'
   33 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17
    '}'            shift, and go to state 68

    compound_stmt  go to state 69
    stmt           go to state 70
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 32

   13 struct_specifier: STRUCT ID '{' def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 33

   75 unary: '&' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 72


State 34

   69 unary: '-' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 73


State 35

   76 unary: '*' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 74


State 36

   70 unary: '!' . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 75


State 37

   73 unary: INCOP . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 76


State 38

   74 unary: DECOP . unary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    unary  go to state 77


State 39

   63 unary: '(' . expr ')'
   64      | '(' . unary ')'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 78
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 79


State 40

   68 unary: ID .

    $default  reduce using rule 68 (unary)


State 41

   66 unary: CHAR_CONST .

    $default  reduce using rule 66 (unary)


State 42

   67 unary: STRING .

    $default  reduce using rule 67 (unary)


State 43

   65 unary: INTEGER_CONST .

    $default  reduce using rule 65 (unary)


State 44

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 80


State 45

   49 const_expr: expr .

    $default  reduce using rule 49 (const_expr)


State 46

   51 expr: or_expr .

    $default  reduce using rule 51 (expr)


State 47

   52 or_expr: or_list .
   53 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 81

    $default  reduce using rule 52 (or_expr)


State 48

   54 or_list: and_expr .

    $default  reduce using rule 54 (or_list)


State 49

   55 and_expr: and_list .
   56 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 82

    $default  reduce using rule 55 (and_expr)


State 50

   57 and_list: binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    EQUOP  shift, and go to state 83
    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 57 (and_list)


State 51

   50 expr: unary . '=' expr
   62 binary: unary .
   71 unary: unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    '='       shift, and go to state 87
    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 62 (binary)


State 52

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 53

   11 type_specifier: VOID .
   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 94

    $default  reduce using rule 11 (type_specifier)


State 54

   22 param_decl: type_specifier . pointers ID
   23           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 13

    $default  reduce using rule 19 (pointers)

    pointers  go to state 95


State 55

   17 func_decl: type_specifier pointers ID '(' param_list . ')'
   21 param_list: param_list . ',' param_decl

    ','  shift, and go to state 96
    ')'  shift, and go to state 97


State 56

   20 param_list: param_decl .

    $default  reduce using rule 20 (param_list)


State 57

   28 def: type_specifier ';' .

    $default  reduce using rule 28 (def)


State 58

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   17          | type_specifier pointers . ID '(' param_list ')'
   26 def: type_specifier pointers . ID ';'
   27    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 98


State 59

   29 def: func_decl ';' .

    $default  reduce using rule 29 (def)


State 60

   37 stmt: RETURN . ';'
   38     | RETURN . expr ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 99

    expr      go to state 100
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 61

   40 stmt: IF . '(' expr ')' stmt
   41     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 101


State 62

   42 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 102


State 63

   43 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 103


State 64

   44 stmt: BREAK . ';'

    ';'  shift, and go to state 104


State 65

   45 stmt: CONTINUE . ';'

    ';'  shift, and go to state 105


State 66

   46 stmt: PRINT .

    $default  reduce using rule 46 (stmt)


State 67

   39 stmt: ';' .

    $default  reduce using rule 39 (stmt)


State 68

   31 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 31 (compound_stmt)


State 69

   36 stmt: compound_stmt .

    $default  reduce using rule 36 (stmt)


State 70

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 71

   35 stmt: expr . ';'

    ';'  shift, and go to state 106


State 72

   71 unary: unary . INCOP
   72      | unary . DECOP
   75      | '&' unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 75 (unary)


State 73

   69 unary: '-' unary .
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 69 (unary)


State 74

   71 unary: unary . INCOP
   72      | unary . DECOP
   76      | '*' unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 76 (unary)


State 75

   70 unary: '!' unary .
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 70 (unary)


State 76

   71 unary: unary . INCOP
   72      | unary . DECOP
   73      | INCOP unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 73 (unary)


State 77

   71 unary: unary . INCOP
   72      | unary . DECOP
   74      | DECOP unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 74 (unary)


State 78

   63 unary: '(' expr . ')'

    ')'  shift, and go to state 107


State 79

   50 expr: unary . '=' expr
   62 binary: unary .
   64 unary: '(' unary . ')'
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    '='       shift, and go to state 87
    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    ')'       shift, and go to state 108
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 62 (binary)


State 80

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 109


State 81

   53 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    and_expr  go to state 110
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 111


State 82

   56 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 112
    unary   go to state 111


State 83

   59 binary: binary EQUOP . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 113
    unary   go to state 111


State 84

   58 binary: binary RELOP . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 114
    unary   go to state 111


State 85

   60 binary: binary '+' . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 115
    unary   go to state 111


State 86

   61 binary: binary '-' . binary

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    binary  go to state 116
    unary   go to state 111


State 87

   50 expr: unary '=' . expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 117
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 88

   71 unary: unary INCOP .

    $default  reduce using rule 71 (unary)


State 89

   72 unary: unary DECOP .

    $default  reduce using rule 72 (unary)


State 90

   77 unary: unary '[' . expr ']'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 118
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 91

   80 unary: unary '(' . args ')'
   81      | unary '(' . ')'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ')'            shift, and go to state 119
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 120
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51
    args      go to state 121


State 92

   78 unary: unary '.' . ID

    ID  shift, and go to state 122


State 93

   79 unary: unary STRUCTOP . ID

    ID  shift, and go to state 123


State 94

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 95

   22 param_decl: type_specifier pointers . ID
   23           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 124


State 96

   21 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 54
    struct_specifier  go to state 10
    param_decl        go to state 125


State 97

   17 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 17 (func_decl)


State 98

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   17          | type_specifier pointers ID . '(' param_list ')'
   26 def: type_specifier pointers ID . ';'
   27    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 126
    '('  shift, and go to state 25
    ';'  shift, and go to state 127


State 99

   37 stmt: RETURN ';' .

    $default  reduce using rule 37 (stmt)


State 100

   38 stmt: RETURN expr . ';'

    ';'  shift, and go to state 128


State 101

   40 stmt: IF '(' . expr ')' stmt
   41     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 129
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 102

   42 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 130
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 103

   43 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 131
    expr      go to state 132
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 104

   44 stmt: BREAK ';' .

    $default  reduce using rule 44 (stmt)


State 105

   45 stmt: CONTINUE ';' .

    $default  reduce using rule 45 (stmt)


State 106

   35 stmt: expr ';' .

    $default  reduce using rule 35 (stmt)


State 107

   63 unary: '(' expr ')' .

    $default  reduce using rule 63 (unary)


State 108

   64 unary: '(' unary ')' .

    $default  reduce using rule 64 (unary)


State 109

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 110

   53 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 53 (or_list)


State 111

   62 binary: unary .
   71 unary: unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 88
    DECOP     shift, and go to state 89
    '['       shift, and go to state 90
    '('       shift, and go to state 91
    '.'       shift, and go to state 92
    STRUCTOP  shift, and go to state 93

    $default  reduce using rule 62 (binary)


State 112

   56 and_list: and_list LOGICAL_AND binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    EQUOP  shift, and go to state 83
    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 56 (and_list)


State 113

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   59       | binary EQUOP binary .
   60       | binary . '+' binary
   61       | binary . '-' binary

    RELOP  shift, and go to state 84
    '+'    shift, and go to state 85
    '-'    shift, and go to state 86

    $default  reduce using rule 59 (binary)


State 114

   58 binary: binary . RELOP binary
   58       | binary RELOP binary .
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86

    $default  reduce using rule 58 (binary)


State 115

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   60       | binary '+' binary .
   61       | binary . '-' binary

    $default  reduce using rule 60 (binary)


State 116

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary
   61       | binary '-' binary .

    $default  reduce using rule 61 (binary)


State 117

   50 expr: unary '=' expr .

    $default  reduce using rule 50 (expr)


State 118

   77 unary: unary '[' expr . ']'

    ']'  shift, and go to state 133


State 119

   81 unary: unary '(' ')' .

    $default  reduce using rule 81 (unary)


State 120

   82 args: expr .

    $default  reduce using rule 82 (args)


State 121

   80 unary: unary '(' args . ')'
   83 args: args . ',' expr

    ','  shift, and go to state 134
    ')'  shift, and go to state 135


State 122

   78 unary: unary '.' ID .

    $default  reduce using rule 78 (unary)


State 123

   79 unary: unary STRUCTOP ID .

    $default  reduce using rule 79 (unary)


State 124

   22 param_decl: type_specifier pointers ID .
   23           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 136

    $default  reduce using rule 22 (param_decl)


State 125

   21 param_list: param_list ',' param_decl .

    $default  reduce using rule 21 (param_list)


State 126

   27 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 137
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 127

   26 def: type_specifier pointers ID ';' .

    $default  reduce using rule 26 (def)


State 128

   38 stmt: RETURN expr ';' .

    $default  reduce using rule 38 (stmt)


State 129

   40 stmt: IF '(' expr . ')' stmt
   41     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 138


State 130

   42 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 139


State 131

   43 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 140


State 132

   47 expr_e: expr .

    $default  reduce using rule 47 (expr_e)


State 133

   77 unary: unary '[' expr ']' .

    $default  reduce using rule 77 (unary)


State 134

   83 args: args ',' . expr

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    expr      go to state 141
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 135

   80 unary: unary '(' args ')' .

    $default  reduce using rule 80 (unary)


State 136

   23 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    const_expr  go to state 142
    expr        go to state 45
    or_expr     go to state 46
    or_list     go to state 47
    and_expr    go to state 48
    and_list    go to state 49
    binary      go to state 50
    unary       go to state 51


State 137

   27 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 143


State 138

   40 stmt: IF '(' expr ')' . stmt
   41     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 144
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 139

   42 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 145
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 140

   43 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 146
    expr      go to state 132
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 141

   83 args: args ',' expr .

    $default  reduce using rule 83 (args)


State 142

   23 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 147


State 143

   27 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 148


State 144

   40 stmt: IF '(' expr ')' stmt .
   41     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 40 (stmt)]
    $default  reduce using rule 40 (stmt)


State 145

   42 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 42 (stmt)


State 146

   43 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 150


State 147

   23 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 23 (param_decl)


State 148

   27 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 27 (def)


State 149

   41 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 151
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 150

   43 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    ID             shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 152
    expr      go to state 132
    or_expr   go to state 46
    or_list   go to state 47
    and_expr  go to state 48
    and_list  go to state 49
    binary    go to state 50
    unary     go to state 51


State 151

   41 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 41 (stmt)


State 152

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 153


State 153

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 33
    '-'            shift, and go to state 34
    '*'            shift, and go to state 35
    '!'            shift, and go to state 36
    INCOP          shift, and go to state 37
    DECOP          shift, and go to state 38
    '('            shift, and go to state 39
    RETURN         shift, and go to state 60
    IF             shift, and go to state 61
    WHILE          shift, and go to state 62
    FOR            shift, and go to state 63
    BREAK          shift, and go to state 64
    CONTINUE       shift, and go to state 65
    ID             shift, and go to state 40
    PRINT          shift, and go to state 66
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    INTEGER_CONST  shift, and go to state 43
    ';'            shift, and go to state 67
    '{'            shift, and go to state 17

    compound_stmt  go to state 69
    stmt           go to state 154
    expr           go to state 71
    or_expr        go to state 46
    or_list        go to state 47
    and_expr       go to state 48
    and_list       go to state 49
    binary         go to state 50
    unary          go to state 51


State 154

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 43 (stmt)
