Terminals unused in grammar

   '|'
   '/'
   '%'


State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'

   17 @2: %empty

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')'

   19 pointers: '*'
   20         | %empty

   21 param_list: param_decl
   22           | param_list ',' param_decl

   23 param_decl: type_specifier pointers ID
   24           | type_specifier pointers ID '[' const_expr ']'

   25 def_list: def_list def
   26         | %empty

   27 def: type_specifier pointers ID ';'
   28    | type_specifier pointers ID '[' const_expr ']' ';'
   29    | type_specifier ';'
   30    | func_decl ';'

   31 $@3: %empty

   32 $@4: %empty

   33 compound_stmt: '{' $@3 local_defs $@4 stmt_list '}'

   34 local_defs: def_list

   35 stmt_list: stmt_list stmt
   36          | %empty

   37 stmt: expr ';'
   38     | compound_stmt
   39     | RETURN ';'
   40     | RETURN expr ';'
   41     | ';'
   42     | IF '(' expr ')' stmt
   43     | IF '(' expr ')' stmt ELSE stmt
   44     | WHILE '(' expr ')' stmt
   45     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   46     | BREAK ';'
   47     | CONTINUE ';'
   48     | PRINT
   49     | WRITE_INT '(' expr ')'
   50     | WRITE_STRING '(' STRING ')'

   51 expr_e: expr
   52       | %empty

   53 const_expr: expr

   54 $@5: %empty

   55 expr: unary '=' $@5 expr
   56     | or_expr

   57 or_expr: or_list

   58 or_list: or_list LOGICAL_OR and_expr
   59        | and_expr

   60 and_expr: and_list

   61 and_list: and_list LOGICAL_AND binary
   62         | binary

   63 binary: binary RELOP binary
   64       | binary EQUOP binary
   65       | binary '+' binary
   66       | binary '-' binary
   67       | unary

   68 unary: '(' expr ')'
   69      | '(' unary ')'
   70      | INTEGER_CONST
   71      | CHAR_CONST
   72      | STRING
   73      | ID
   74      | '-' unary
   75      | '!' unary
   76      | unary INCOP
   77      | unary DECOP
   78      | INCOP unary
   79      | DECOP unary
   80      | '&' unary
   81      | '*' unary
   82      | unary '[' expr ']'
   83      | unary '.' ID
   84      | unary STRUCTOP ID
   85      | unary '(' args ')'
   86      | unary '(' ')'

   87 args: expr
   88     | expr ',' args


Terminals, with rules where they appear

$end (0) 0
'!' (33) 75
'%' (37)
'&' (38) 80
'(' (40) 15 16 18 42 43 44 45 49 50 68 69 85 86
')' (41) 15 16 18 42 43 44 45 49 50 68 69 85 86
'*' (42) 19 81
'+' (43) 65
',' (44) 22 88
'-' (45) 66 74
'.' (46) 83
'/' (47)
';' (59) 4 5 6 7 27 28 29 30 37 39 40 41 45 46 47
'=' (61) 55
'[' (91) 5 24 28 82
']' (93) 5 24 28 82
'{' (123) 13 33
'|' (124)
'}' (125) 13 33
error (256)
LOGICAL_OR (258) 58
LOGICAL_AND (259) 61
EQUOP (260) 64
RELOP (261) 63
INCOP (262) 76 78
DECOP (263) 77 79
ELSE (264) 43
STRUCTOP (265) 84
WRITE_INT (266) 49
TYPE (267) 9
VOID (268) 10 16
STRUCT (269) 13 14
RETURN (270) 39 40
IF (271) 42 43
WHILE (272) 44
FOR (273) 45
BREAK (274) 46
CONTINUE (275) 47
ID (276) 4 5 13 14 15 16 18 23 24 27 28 73 83 84
WRITE_STRING (277) 50
PRINT (278) 48
CHAR_CONST (279) 71
STRING (280) 50 72
INTEGER_CONST (281) 70


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
ext_def_list (47)
    on left: 2 3, on right: 1 2
ext_def (48)
    on left: 4 5 6 7 8, on right: 2
type_specifier (49)
    on left: 9 10 11, on right: 4 5 7 15 16 18 23 24 27 28 29
struct_specifier (50)
    on left: 13 14, on right: 11
$@1 (51)
    on left: 12, on right: 13
func_decl (52)
    on left: 15 16 18, on right: 6 8 30
@2 (53)
    on left: 17, on right: 18
pointers (54)
    on left: 19 20, on right: 4 5 15 16 18 23 24 27 28
param_list (55)
    on left: 21 22, on right: 18 22
param_decl (56)
    on left: 23 24, on right: 21 22
def_list (57)
    on left: 25 26, on right: 13 25 34
def (58)
    on left: 27 28 29 30, on right: 25
compound_stmt (59)
    on left: 33, on right: 8 38
$@3 (60)
    on left: 31, on right: 33
$@4 (61)
    on left: 32, on right: 33
local_defs (62)
    on left: 34, on right: 33
stmt_list (63)
    on left: 35 36, on right: 33 35
stmt (64)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50, on right: 35
    42 43 44 45
expr_e (65)
    on left: 51 52, on right: 45
const_expr (66)
    on left: 53, on right: 5 24 28
expr (67)
    on left: 55 56, on right: 37 40 42 43 44 49 51 53 55 68 82 87 88
$@5 (68)
    on left: 54, on right: 55
or_expr (69)
    on left: 57, on right: 56
or_list (70)
    on left: 58 59, on right: 57 58
and_expr (71)
    on left: 60, on right: 58 59
and_list (72)
    on left: 61 62, on right: 60 61
binary (73)
    on left: 63 64 65 66 67, on right: 61 62 63 64 65 66
unary (74)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    86, on right: 55 67 69 74 75 76 77 78 79 80 81 82 83 84 85 86
args (75)
    on left: 87 88, on right: 85 88


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 20 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 14 (struct_specifier)


State 12

   19 pointers: '*' .

    $default  reduce using rule 19 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   33 compound_stmt: '{' . $@3 local_defs $@4 stmt_list '}'

    $default  reduce using rule 31 ($@3)

    $@3  go to state 20


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 21


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 20

   33 compound_stmt: '{' $@3 . local_defs $@4 stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 25
    local_defs  go to state 26


State 21

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 26 (def_list)

    def_list  go to state 27


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 39
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 23

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   18          | type_specifier pointers ID '(' . @2 param_list ')'

    ')'   shift, and go to state 47
    VOID  shift, and go to state 48

    VOID      [reduce using rule 17 (@2)]
    $default  reduce using rule 17 (@2)

    @2  go to state 49


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   25 def_list: def_list . def
   34 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 34 (local_defs)

    type_specifier    go to state 50
    struct_specifier  go to state 9
    func_decl         go to state 51
    def               go to state 52


State 26

   33 compound_stmt: '{' $@3 local_defs . $@4 stmt_list '}'

    $default  reduce using rule 32 ($@4)

    $@4  go to state 53


State 27

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   25 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 54

    type_specifier    go to state 50
    struct_specifier  go to state 9
    func_decl         go to state 51
    def               go to state 52


State 28

   80 unary: '&' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 55


State 29

   74 unary: '-' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 56


State 30

   81 unary: '*' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 57


State 31

   75 unary: '!' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 58


State 32

   78 unary: INCOP . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 59


State 33

   79 unary: DECOP . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 60


State 34

   68 unary: '(' . expr ')'
   69      | '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 61
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 62


State 35

   73 unary: ID .

    $default  reduce using rule 73 (unary)


State 36

   71 unary: CHAR_CONST .

    $default  reduce using rule 71 (unary)


State 37

   72 unary: STRING .

    $default  reduce using rule 72 (unary)


State 38

   70 unary: INTEGER_CONST .

    $default  reduce using rule 70 (unary)


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 63


State 40

   53 const_expr: expr .

    $default  reduce using rule 53 (const_expr)


State 41

   56 expr: or_expr .

    $default  reduce using rule 56 (expr)


State 42

   57 or_expr: or_list .
   58 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 64

    $default  reduce using rule 57 (or_expr)


State 43

   59 or_list: and_expr .

    $default  reduce using rule 59 (or_list)


State 44

   60 and_expr: and_list .
   61 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 65

    $default  reduce using rule 60 (and_expr)


State 45

   62 and_list: binary .
   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '+' binary
   66       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 62 (and_list)


State 46

   55 expr: unary . '=' $@5 expr
   67 binary: unary .
   76 unary: unary . INCOP
   77      | unary . DECOP
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    '='       shift, and go to state 70
    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 67 (binary)


State 47

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 48

   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 77


State 49

   18 func_decl: type_specifier pointers ID '(' @2 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_list        go to state 79
    param_decl        go to state 80


State 50

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'
   27 def: type_specifier . pointers ID ';'
   28    | type_specifier . pointers ID '[' const_expr ']' ';'
   29    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 81

    $default  reduce using rule 20 (pointers)

    pointers  go to state 82


State 51

   30 def: func_decl . ';'

    ';'  shift, and go to state 83


State 52

   25 def_list: def_list def .

    $default  reduce using rule 25 (def_list)


State 53

   33 compound_stmt: '{' $@3 local_defs $@4 . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 84


State 54

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 55

   76 unary: unary . INCOP
   77      | unary . DECOP
   80      | '&' unary .
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 80 (unary)


State 56

   74 unary: '-' unary .
   76      | unary . INCOP
   77      | unary . DECOP
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 74 (unary)


State 57

   76 unary: unary . INCOP
   77      | unary . DECOP
   81      | '*' unary .
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 81 (unary)


State 58

   75 unary: '!' unary .
   76      | unary . INCOP
   77      | unary . DECOP
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 75 (unary)


State 59

   76 unary: unary . INCOP
   77      | unary . DECOP
   78      | INCOP unary .
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 78 (unary)


State 60

   76 unary: unary . INCOP
   77      | unary . DECOP
   79      | DECOP unary .
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 79 (unary)


State 61

   68 unary: '(' expr . ')'

    ')'  shift, and go to state 85


State 62

   55 expr: unary . '=' $@5 expr
   67 binary: unary .
   69 unary: '(' unary . ')'
   76      | unary . INCOP
   77      | unary . DECOP
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    '='       shift, and go to state 70
    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    ')'       shift, and go to state 86
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 67 (binary)


State 63

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 87


State 64

   58 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    and_expr  go to state 88
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 89


State 65

   61 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 90
    unary   go to state 89


State 66

   64 binary: binary EQUOP . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 91
    unary   go to state 89


State 67

   63 binary: binary RELOP . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 92
    unary   go to state 89


State 68

   65 binary: binary '+' . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 93
    unary   go to state 89


State 69

   66 binary: binary '-' . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 94
    unary   go to state 89


State 70

   55 expr: unary '=' . $@5 expr

    $default  reduce using rule 54 ($@5)

    $@5  go to state 95


State 71

   76 unary: unary INCOP .

    $default  reduce using rule 76 (unary)


State 72

   77 unary: unary DECOP .

    $default  reduce using rule 77 (unary)


State 73

   82 unary: unary '[' . expr ']'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 96
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 74

   85 unary: unary '(' . args ')'
   86      | unary '(' . ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ')'            shift, and go to state 97
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 98
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 99


State 75

   83 unary: unary '.' . ID

    ID  shift, and go to state 100


State 76

   84 unary: unary STRUCTOP . ID

    ID  shift, and go to state 101


State 77

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 78

   23 param_decl: type_specifier . pointers ID
   24           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 20 (pointers)

    pointers  go to state 102


State 79

   18 func_decl: type_specifier pointers ID '(' @2 param_list . ')'
   22 param_list: param_list . ',' param_decl

    ','  shift, and go to state 103
    ')'  shift, and go to state 104


State 80

   21 param_list: param_decl .

    $default  reduce using rule 21 (param_list)


State 81

   29 def: type_specifier ';' .

    $default  reduce using rule 29 (def)


State 82

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'
   27 def: type_specifier pointers . ID ';'
   28    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 105


State 83

   30 def: func_decl ';' .

    $default  reduce using rule 30 (def)


State 84

   33 compound_stmt: '{' $@3 local_defs $@4 stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    WRITE_INT      shift, and go to state 106
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    ID             shift, and go to state 35
    WRITE_STRING   shift, and go to state 113
    PRINT          shift, and go to state 114
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 115
    '{'            shift, and go to state 16
    '}'            shift, and go to state 116

    compound_stmt  go to state 117
    stmt           go to state 118
    expr           go to state 119
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 85

   68 unary: '(' expr ')' .

    $default  reduce using rule 68 (unary)


State 86

   69 unary: '(' unary ')' .

    $default  reduce using rule 69 (unary)


State 87

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 88

   58 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 58 (or_list)


State 89

   67 binary: unary .
   76 unary: unary . INCOP
   77      | unary . DECOP
   82      | unary . '[' expr ']'
   83      | unary . '.' ID
   84      | unary . STRUCTOP ID
   85      | unary . '(' args ')'
   86      | unary . '(' ')'

    INCOP     shift, and go to state 71
    DECOP     shift, and go to state 72
    '['       shift, and go to state 73
    '('       shift, and go to state 74
    '.'       shift, and go to state 75
    STRUCTOP  shift, and go to state 76

    $default  reduce using rule 67 (binary)


State 90

   61 and_list: and_list LOGICAL_AND binary .
   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '+' binary
   66       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 61 (and_list)


State 91

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   64       | binary EQUOP binary .
   65       | binary . '+' binary
   66       | binary . '-' binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 64 (binary)


State 92

   63 binary: binary . RELOP binary
   63       | binary RELOP binary .
   64       | binary . EQUOP binary
   65       | binary . '+' binary
   66       | binary . '-' binary

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 63 (binary)


State 93

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '+' binary
   65       | binary '+' binary .
   66       | binary . '-' binary

    $default  reduce using rule 65 (binary)


State 94

   63 binary: binary . RELOP binary
   64       | binary . EQUOP binary
   65       | binary . '+' binary
   66       | binary . '-' binary
   66       | binary '-' binary .

    $default  reduce using rule 66 (binary)


State 95

   55 expr: unary '=' $@5 . expr

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 120
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 96

   82 unary: unary '[' expr . ']'

    ']'  shift, and go to state 121


State 97

   86 unary: unary '(' ')' .

    $default  reduce using rule 86 (unary)


State 98

   87 args: expr .
   88     | expr . ',' args

    ','  shift, and go to state 122

    $default  reduce using rule 87 (args)


State 99

   85 unary: unary '(' args . ')'

    ')'  shift, and go to state 123


State 100

   83 unary: unary '.' ID .

    $default  reduce using rule 83 (unary)


State 101

   84 unary: unary STRUCTOP ID .

    $default  reduce using rule 84 (unary)


State 102

   23 param_decl: type_specifier pointers . ID
   24           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 124


State 103

   22 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_decl        go to state 125


State 104

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')' .

    $default  reduce using rule 18 (func_decl)


State 105

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'
   27 def: type_specifier pointers ID . ';'
   28    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 126
    '('  shift, and go to state 23
    ';'  shift, and go to state 127


State 106

   49 stmt: WRITE_INT . '(' expr ')'

    '('  shift, and go to state 128


State 107

   39 stmt: RETURN . ';'
   40     | RETURN . expr ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 129

    expr      go to state 130
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 108

   42 stmt: IF . '(' expr ')' stmt
   43     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 131


State 109

   44 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 132


State 110

   45 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 133


State 111

   46 stmt: BREAK . ';'

    ';'  shift, and go to state 134


State 112

   47 stmt: CONTINUE . ';'

    ';'  shift, and go to state 135


State 113

   50 stmt: WRITE_STRING . '(' STRING ')'

    '('  shift, and go to state 136


State 114

   48 stmt: PRINT .

    $default  reduce using rule 48 (stmt)


State 115

   41 stmt: ';' .

    $default  reduce using rule 41 (stmt)


State 116

   33 compound_stmt: '{' $@3 local_defs $@4 stmt_list '}' .

    $default  reduce using rule 33 (compound_stmt)


State 117

   38 stmt: compound_stmt .

    $default  reduce using rule 38 (stmt)


State 118

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 119

   37 stmt: expr . ';'

    ';'  shift, and go to state 137


State 120

   55 expr: unary '=' $@5 expr .

    $default  reduce using rule 55 (expr)


State 121

   82 unary: unary '[' expr ']' .

    $default  reduce using rule 82 (unary)


State 122

   88 args: expr ',' . args

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 98
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 138


State 123

   85 unary: unary '(' args ')' .

    $default  reduce using rule 85 (unary)


State 124

   23 param_decl: type_specifier pointers ID .
   24           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 139

    $default  reduce using rule 23 (param_decl)


State 125

   22 param_list: param_list ',' param_decl .

    $default  reduce using rule 22 (param_list)


State 126

   28 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 140
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 127

   27 def: type_specifier pointers ID ';' .

    $default  reduce using rule 27 (def)


State 128

   49 stmt: WRITE_INT '(' . expr ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 141
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 129

   39 stmt: RETURN ';' .

    $default  reduce using rule 39 (stmt)


State 130

   40 stmt: RETURN expr . ';'

    ';'  shift, and go to state 142


State 131

   42 stmt: IF '(' . expr ')' stmt
   43     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 143
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 132

   44 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 144
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 133

   45 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 145
    expr      go to state 146
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 134

   46 stmt: BREAK ';' .

    $default  reduce using rule 46 (stmt)


State 135

   47 stmt: CONTINUE ';' .

    $default  reduce using rule 47 (stmt)


State 136

   50 stmt: WRITE_STRING '(' . STRING ')'

    STRING  shift, and go to state 147


State 137

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


State 138

   88 args: expr ',' args .

    $default  reduce using rule 88 (args)


State 139

   24 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 148
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 140

   28 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 149


State 141

   49 stmt: WRITE_INT '(' expr . ')'

    ')'  shift, and go to state 150


State 142

   40 stmt: RETURN expr ';' .

    $default  reduce using rule 40 (stmt)


State 143

   42 stmt: IF '(' expr . ')' stmt
   43     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 151


State 144

   44 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 152


State 145

   45 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 153


State 146

   51 expr_e: expr .

    $default  reduce using rule 51 (expr_e)


State 147

   50 stmt: WRITE_STRING '(' STRING . ')'

    ')'  shift, and go to state 154


State 148

   24 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 155


State 149

   28 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 156


State 150

   49 stmt: WRITE_INT '(' expr ')' .

    $default  reduce using rule 49 (stmt)


State 151

   42 stmt: IF '(' expr ')' . stmt
   43     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    WRITE_INT      shift, and go to state 106
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    ID             shift, and go to state 35
    WRITE_STRING   shift, and go to state 113
    PRINT          shift, and go to state 114
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 115
    '{'            shift, and go to state 16

    compound_stmt  go to state 117
    stmt           go to state 157
    expr           go to state 119
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 152

   44 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    WRITE_INT      shift, and go to state 106
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    ID             shift, and go to state 35
    WRITE_STRING   shift, and go to state 113
    PRINT          shift, and go to state 114
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 115
    '{'            shift, and go to state 16

    compound_stmt  go to state 117
    stmt           go to state 158
    expr           go to state 119
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 153

   45 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 159
    expr      go to state 146
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 154

   50 stmt: WRITE_STRING '(' STRING ')' .

    $default  reduce using rule 50 (stmt)


State 155

   24 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 24 (param_decl)


State 156

   28 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 28 (def)


State 157

   42 stmt: IF '(' expr ')' stmt .
   43     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 160

    $default  reduce using rule 42 (stmt)


State 158

   44 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 44 (stmt)


State 159

   45 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 161


State 160

   43 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    WRITE_INT      shift, and go to state 106
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    ID             shift, and go to state 35
    WRITE_STRING   shift, and go to state 113
    PRINT          shift, and go to state 114
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 115
    '{'            shift, and go to state 16

    compound_stmt  go to state 117
    stmt           go to state 162
    expr           go to state 119
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 161

   45 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 52 (expr_e)

    expr_e    go to state 163
    expr      go to state 146
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 162

   43 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 43 (stmt)


State 163

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 164


State 164

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    WRITE_INT      shift, and go to state 106
    RETURN         shift, and go to state 107
    IF             shift, and go to state 108
    WHILE          shift, and go to state 109
    FOR            shift, and go to state 110
    BREAK          shift, and go to state 111
    CONTINUE       shift, and go to state 112
    ID             shift, and go to state 35
    WRITE_STRING   shift, and go to state 113
    PRINT          shift, and go to state 114
    CHAR_CONST     shift, and go to state 36
    STRING         shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 115
    '{'            shift, and go to state 16

    compound_stmt  go to state 117
    stmt           go to state 165
    expr           go to state 119
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 165

   45 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 45 (stmt)
